# -*- coding: utf-8 -*-
import streamlit as st
import requests
import os
import platform
import json
import datetime
from streamlit_local_storage import LocalStorage
from duckduckgo_search import DDGS
import traceback
import re
import logging
from html import unescape # –î–ª—è –æ—á–∏—Å—Ç–∫–∏ HTML —Å—É—â–Ω–æ—Å—Ç–µ–π

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
# –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —É—Ä–æ–≤–µ–Ω—å INFO, —á—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –≤—Å–µ —à–∞–≥–∏
logging.basicConfig(level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')

# --- –ö–ª—é—á API –∏–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤ ---
OPENROUTER_API_KEY = st.secrets.get("OPENROUTER_API_KEY")

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---
OPENROUTER_API_URL = "https://openrouter.ai/api/v1/chat/completions"
MODES = {
    "–°—Ç–∞–Ω–¥–∞—Ä—Ç (V3)": "deepseek/deepseek-chat-v3-0324:free",
    "DeepThink (R1)": "deepseek/deepseek-r1:free",
}
DEFAULT_MODE = "–°—Ç–∞–Ω–¥–∞—Ä—Ç (V3)"
LOCAL_STORAGE_KEY = "multi_chat_storage_v15" # –°–º–µ–Ω–∏–ª –∫–ª—é—á –Ω–∞ —Å–ª—É—á–∞–π –Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏ —Å—Ç–∞—Ä—ã—Ö –¥–∞–Ω–Ω—ã—Ö
DEFAULT_CHAT_NAME = "–ù–æ–≤—ã–π —á–∞—Ç"
MAX_SEARCH_RESULTS_PER_QUERY = 4 # –£–º–µ–Ω—å—à–∏–ª –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω–æ—Å—Ç–∏
MAX_QUERIES_TO_GENERATE = 3
MAX_SNIPPET_LENGTH = 300 # –ù–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–ª –¥–ª—è –±–æ–ª—å—à–µ–≥–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
REQUEST_TIMEOUT = 35 # –ù–µ–º–Ω–æ–≥–æ —É–≤–µ–ª–∏—á–∏–ª —Ç–∞–π–º–∞—É—Ç
STREAM_TIMEOUT = 180

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ---
st.set_page_config(
    page_title="–£–ª—É—á—à–µ–Ω–Ω—ã–π –ß–∞—Ç –ò–ò —Å –ü–æ–∏—Å–∫–æ–º", page_icon="üí°", layout="wide", initial_sidebar_state="expanded"
)

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LocalStorage ---
try:
    localS = LocalStorage()
except Exception as e:
    logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ LocalStorage: {e}", exc_info=True)
    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ. –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–æ–≤ –Ω–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è.", icon="üö®")
    localS = None

# --- –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π CSS ---
# (–û—Å—Ç–∞–≤–ª–µ–Ω –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, —Ç.–∫. –ø—Ä–æ–±–ª–µ–º–∞ –±—ã–ª–∞ –Ω–µ –≤ –Ω–µ–º)
custom_css = f"""
<style>
     .main .block-container {{ padding-top: 1rem; padding-bottom: 4rem; padding-left: 1rem; padding-right: 1rem; }}
    [data-testid="stChatMessage"] {{ background: none !important; border: none !important; box-shadow: none !important; padding: 0.1rem 0 !important; margin-bottom: 0.75rem !important; }}
    [data-testid="stChatMessage"] > div {{ gap: 0.75rem; }}
    [data-testid="stChatMessage"] .stChatMessageContent {{ padding: 0 !important; }}
    [data-testid="stChatMessage"] .stChatMessageContent p {{ margin-bottom: 0.2rem; }}
    [data-testid="stSidebar"] {{ padding: 1rem; }}
    [data-testid="stSidebar"] h2 {{ text-align: center; margin-bottom: 1rem; font-size: 1.4rem; }}
    [data-testid="stSidebar"] .stButton button {{ width: 100%; margin-bottom: 0.5rem; border-radius: 5px; }}
    [data-testid="stSidebar"] .stRadio [data-testid="stWidgetLabel"] {{ font-size: 0.9rem; margin-bottom: 0.3rem; font-weight: bold; }}
    [data-testid="stSidebar"] [data-testid="stToggle"] label {{ font-size: 0.95rem; font-weight: bold; }}
    [data-testid="stStatusWidget"] div[role="status"] {{ text-align: center; }}
</style>
"""
st.markdown(custom_css, unsafe_allow_html=True)

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞ ---
if not OPENROUTER_API_KEY:
    st.error("‚õî –ö–ª—é—á API OpenRouter (`OPENROUTER_API_KEY`) –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ–∫—Ä–µ—Ç–∞—Ö Streamlit! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–±–∞–≤—å—Ç–µ –µ–≥–æ.", icon="üö®")
    logging.error("–ö–ª—é—á API OpenRouter –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    st.stop()

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Ç–∞–º–∏ (–±–µ–∑ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
def load_all_chats():
    # ... (–∫–æ–¥ load_all_chats –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏) ...
    default_chats = {f"{DEFAULT_CHAT_NAME} 1": []}
    default_name = f"{DEFAULT_CHAT_NAME} 1"
    initial_search_state = False
    if not localS: logging.warning("LocalStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."); st.session_state.web_search_enabled = initial_search_state; return default_chats, default_name
    data_str = localS.getItem(LOCAL_STORAGE_KEY)
    if data_str:
        try:
            data = json.loads(data_str)
            if isinstance(data, dict) and "chats" in data and "active_chat" in data and isinstance(data["chats"], dict):
                cleaned_chats = {}
                for name, history in data["chats"].items(): cleaned_chats[name] = [msg for msg in history if isinstance(msg, dict) and msg.get("role") and msg.get("content")] if isinstance(history, list) else []
                if not cleaned_chats: st.session_state.web_search_enabled = initial_search_state; return default_chats, default_name
                active_chat = data["active_chat"]
                if active_chat not in cleaned_chats: active_chat = list(cleaned_chats.keys())[0]; logging.warning(f"–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç '{data['active_chat']}' –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–±—Ä–∞–Ω –ø–µ—Ä–≤—ã–π: '{active_chat}'.")
                st.session_state.web_search_enabled = data.get("web_search_enabled", initial_search_state)
                logging.info(f"–ß–∞—Ç—ã –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∏—Å–∫–∞ ({st.session_state.web_search_enabled=}) —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã.")
                return cleaned_chats, active_chat
            else: logging.warning("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ LocalStorage –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
        except json.JSONDecodeError as e: logging.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –∏–∑ LocalStorage: {e}. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
        except Exception as e: logging.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —á–∞—Ç–æ–≤: {e}. –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.", exc_info=True)
    else: logging.info("–î–∞–Ω–Ω—ã–µ –≤ LocalStorage –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
    st.session_state.web_search_enabled = initial_search_state
    return default_chats, default_name

def save_all_chats(chats_dict, active_chat_name, web_search_state):
    # ... (–∫–æ–¥ save_all_chats –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏) ...
    if not localS: logging.warning("LocalStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ."); return False
    if not isinstance(chats_dict, dict): logging.error("–ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç —á–∞—Ç–æ–≤ (–¥–æ–ª–∂–µ–Ω –±—ã—Ç—å dict)."); return False
    if not isinstance(active_chat_name, str) and active_chat_name is not None: logging.error("–ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏–º–µ–Ω–∏ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞."); return False
    cleaned_chats = {}
    for name, history in chats_dict.items(): cleaned_chats[name] = [msg for msg in history if isinstance(msg, dict) and msg.get("role") and msg.get("content")] if isinstance(history, list) else []
    if not cleaned_chats: active_chat_name = None
    elif active_chat_name not in cleaned_chats: active_chat_name = list(cleaned_chats.keys())[0] if cleaned_chats else None; logging.warning(f"–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–±—Ä–∞–Ω –ø–µ—Ä–≤—ã–π: {active_chat_name}")
    data_to_save = {"chats": cleaned_chats, "active_chat": active_chat_name, "web_search_enabled": web_search_state}
    try: localS.setItem(LOCAL_STORAGE_KEY, json.dumps(data_to_save)); logging.info(f"–ß–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ê–∫—Ç–∏–≤–Ω—ã–π: {active_chat_name}, –ü–æ–∏—Å–∫: {web_search_state}"); return True
    except Exception as e: logging.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Ç–æ–≤ –≤ LocalStorage: {e}", exc_info=True); st.toast("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–µ—Å—Å–∏–∏ —á–∞—Ç–∞!", icon="üö®"); return False

def generate_new_chat_name(existing_names):
    # ... (–∫–æ–¥ generate_new_chat_name –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏) ...
    i = 1; base_name = DEFAULT_CHAT_NAME
    while f"{base_name} {i}" in existing_names: i += 1
    return f"{base_name} {i}"

# --- –£–õ–£–ß–®–ï–ù–ù–ê–Ø –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –í–û–ü–†–û–°–û–í ---
def generate_search_queries(user_prompt, model_id):
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "http://localhost:8501", # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à URL, –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
        "X-Title": "Streamlit Improved Search Chat AI" # –û–±–Ω–æ–≤–∏–ª –∑–∞–≥–æ–ª–æ–≤–æ–∫
    }
    # === –ù–û–í–´–ô –ü–†–û–ú–ü–¢ ===
    current_date_str = datetime.datetime.now().strftime('%d %B %Y')
    generation_prompt = f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ {MAX_QUERIES_TO_GENERATE} –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö, **–ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ**. –≠—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω—ã —Ç–∞–∫, –∫–∞–∫ –∏—Ö –∑–∞–¥–∞–ª –±—ã –ª—é–±–æ–ø—ã—Ç–Ω—ã–π —á–µ–ª–æ–≤–µ–∫ –ø–æ–∏—Å–∫–æ–≤–æ–π —Å–∏—Å—Ç–µ–º–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, Google, DuckDuckGo), —á—Ç–æ–±—ã –Ω–∞–π—Ç–∏ –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–º–µ –∑–∞–ø—Ä–æ—Å–∞.

**–ò–∑–±–µ–≥–∞–π –ø—Ä–æ—Å—Ç—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤.** –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ —Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—Ä–∞–∑—ã.
–£—á–∏—Ç—ã–≤–∞–π –≤–æ–∑–º–æ–∂–Ω—É—é –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (—Å–µ–≥–æ–¥–Ω—è {current_date_str}).

–ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:
- "–ö–∞–∫–æ–≤—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –≤ –æ–±–ª–∞—Å—Ç–∏ [—Ç–µ–º–∞]?"
- "–ö–∞–∫ [—Å–¥–µ–ª–∞—Ç—å —á—Ç–æ-—Ç–æ] –ø–æ—à–∞–≥–æ–≤–æ?"
- "–°—Ä–∞–≤–Ω–µ–Ω–∏–µ [–ø—Ä–æ–¥—É–∫—Ç –ê] –∏ [–ø—Ä–æ–¥—É–∫—Ç –ë] –≤ {datetime.datetime.now().year} –≥–æ–¥—É"
- "–ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ [—Å–æ–±—ã—Ç–∏–µ –∏–ª–∏ –∫–æ–º–ø–∞–Ω–∏—è]"
- "–û–±—ä—è—Å–Ω–µ–Ω–∏–µ [—Å–ª–æ–∂–Ω—ã–π —Ç–µ—Ä–º–∏–Ω] –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏"
- "–ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ –∏ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ [—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è]"

–í—ã–≤–µ–¥–∏ —Ç–æ–ª—å–∫–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–∞–∂–¥—ã–π –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ. –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π –Ω—É–º–µ—Ä–∞—Ü–∏—é –∏–ª–∏ –º–∞—Ä–∫–µ—Ä—ã —Å–ø–∏—Å–∫–∞ (*, -).

–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:
"{user_prompt}"

–ü–æ–∏—Å–∫–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã:"""
    # === –ö–û–ù–ï–¶ –ù–û–í–û–ì–û –ü–†–û–ú–ü–¢–ê ===

    payload = {
        "model": model_id,
        "messages": [{"role": "user", "content": generation_prompt}],
        "max_tokens": 150, # –ù–µ–º–Ω–æ–≥–æ –±–æ–ª—å—à–µ –¥–ª—è –ø–æ–ª–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
        "temperature": 0.4, # –ß—É—Ç—å –≤—ã—à–µ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è –≤–æ–ø—Ä–æ—Å–æ–≤
        "stop": ["\n\n"] # –ü–æ–ø—ã—Ç–∫–∞ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –ª–∏—à–Ω–µ–≥–æ —Ç–µ–∫—Å—Ç–∞
    }
    generated_queries = []
    try:
        logging.info(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –í–û–ü–†–û–°–û–í –¥–ª—è: '{user_prompt[:50]}...'")
        response = requests.post(OPENROUTER_API_URL, headers=headers, json=payload, timeout=REQUEST_TIMEOUT)
        response.raise_for_status()
        data = response.json()
        raw_queries = data.get("choices", [{}])[0].get("message", {}).get("content", "")

        if raw_queries:
            # –†–∞–∑–¥–µ–ª—è–µ–º –ø–æ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ, —É–±–∏—Ä–∞–µ–º –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏ –∏ –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
            queries = [q.strip() for q in raw_queries.split('\n') if q.strip()]
            # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ —É–±–∏—Ä–∞–µ–º –≤–æ–∑–º–æ–∂–Ω—ã–µ –º–∞—Ä–∫–µ—Ä—ã, –∫–æ—Ç–æ—Ä—ã–µ –ò–ò –º–æ–≥ –¥–æ–±–∞–≤–∏—Ç—å –≤–æ–ø—Ä–µ–∫–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
            queries = [re.sub(r"^\s*[\d\.\-\*]+\s*", "", q) for q in queries]
            generated_queries = [q for q in queries if q] # –§–∏–Ω–∞–ª—å–Ω–∞—è –æ—á–∏—Å—Ç–∫–∞ –æ—Ç –ø—É—Å—Ç—ã—Ö
            logging.info(f"  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –≤–æ–ø—Ä–æ—Å–æ–≤: {generated_queries}")
        else:
            logging.warning("  API –≤–µ—Ä–Ω—É–ª–æ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤.")

    except requests.exceptions.Timeout:
        logging.error("  –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤: –¢–∞–π–º–∞—É—Ç —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å OpenRouter.")
        st.toast("–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–¥–±–æ—Ä–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.", icon="‚è±Ô∏è")
    except requests.exceptions.RequestException as e:
        logging.error(f"  –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}")
        st.toast(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–¥–±–æ—Ä–µ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}", icon="üö®")
    except Exception as e:
        logging.error(f"  –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}", exc_info=True)
        st.toast("–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–¥–±–æ—Ä–µ –≤–æ–ø—Ä–æ—Å–æ–≤.", icon="‚ùì")

    return generated_queries[:MAX_QUERIES_TO_GENERATE]

# --- –§—É–Ω–∫—Ü–∏—è –≤–µ–±-–ø–æ–∏—Å–∫–∞ (—Å –æ—á–∏—Å—Ç–∫–æ–π) ---
def clean_html(raw_html):
  """–ü—Ä–æ—Å—Ç–∞—è –æ—á–∏—Å—Ç–∫–∞ HTML —Ç–µ–≥–æ–≤ –∏ —Å—É—â–Ω–æ—Å—Ç–µ–π."""
  if not isinstance(raw_html, str): return ""
  cleanr = re.compile('<.*?>')
  cleantext = re.sub(cleanr, '', raw_html)
  cleantext = unescape(cleantext) # –î–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏–µ HTML —Å—É—â–Ω–æ—Å—Ç–µ–π —Ç–∏–ø–∞ &
  return cleantext.strip()

def perform_web_search(queries: list, max_results_per_query=MAX_SEARCH_RESULTS_PER_QUERY):
    all_results_text = ""
    aggregated_results = []
    if not queries:
        logging.warning("–ù–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–µ–±-–ø–æ–∏—Å–∫–∞.")
        return "–ù–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –ø–æ–∏—Å–∫–∞."

    logging.info(f"–ù–∞—á–∏–Ω–∞—é –≤–µ–±-–ø–æ–∏—Å–∫ –ø–æ {len(queries)} –∑–∞–ø—Ä–æ—Å–∞–º...")
    search_errors = []
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è DDGS
        with DDGS(timeout=REQUEST_TIMEOUT) as ddgs:
            for idx, query in enumerate(queries, 1):
                logging.info(f"  –í—ã–ø–æ–ª–Ω—è—é –∑–∞–ø—Ä–æ—Å {idx}/{len(queries)}: '{query}'...")
                try:
                    # –ò—Å–ø–æ–ª—å–∑—É–µ–º ddgs.text –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                    search_results = list(ddgs.text(query, max_results=max_results_per_query))
                    # –û—á–∏—â–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                    for result in search_results:
                         result['body'] = clean_html(result.get('body', ''))
                         result['title'] = clean_html(result.get('title', ''))
                    aggregated_results.extend(search_results)
                    logging.info(f"    –ù–∞–π–¥–µ–Ω–æ –∏ –æ—á–∏—â–µ–Ω–æ {len(search_results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è '{query}'.")
                except Exception as e:
                    logging.error(f"    –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ –∑–∞–ø—Ä–æ—Å—É '{query}': {e}", exc_info=True)
                    search_errors.append(query)
                    # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º –≤–µ—Å—å –ø–æ–∏—Å–∫ –∏–∑-–∑–∞ –æ–¥–Ω–æ–≥–æ –∑–∞–ø—Ä–æ—Å–∞

        if search_errors:
             st.toast(f"–ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ –∑–∞–ø—Ä–æ—Å–∞–º: {', '.join(search_errors)}", icon="üï∏Ô∏è")

        if aggregated_results:
            unique_results_dict = {}
            for res in aggregated_results:
                body = res.get('body')
                # –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç, —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–ª–æ –∏ –æ–Ω–æ –µ—â–µ –Ω–µ –≤—Å—Ç—Ä–µ—á–∞–ª–æ—Å—å
                if body and body not in unique_results_dict:
                    unique_results_dict[body] = res

            unique_results = list(unique_results_dict.values())
            logging.info(f"–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏: {len(unique_results)}")

            if unique_results:
                result_lines = []
                for i, res in enumerate(unique_results, 1):
                    title = res.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
                    body = res.get('body', '')
                    # –û–±—Ä–µ–∑–∞–µ–º —Å–Ω–∏–ø–ø–µ—Ç, –µ—Å–ª–∏ –æ–Ω —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π
                    snippet = (body[:MAX_SNIPPET_LENGTH] + '...') if len(body) > MAX_SNIPPET_LENGTH else body
                    result_lines.append(f"{i}. {title}: {snippet}")
                all_results_text = "--- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–µ–±-–ø–æ–∏—Å–∫–∞ ---\n" + "\n\n".join(result_lines) # –î–æ–±–∞–≤–∏–ª –ø—É—Å—Ç—É—é —Å—Ç—Ä–æ–∫—É –º–µ–∂–¥—É —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
            else:
                all_results_text = "–ù–µ –Ω–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –∏ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏."
                logging.info(all_results_text)
        else:
            all_results_text = "–ü–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."
            logging.info(all_results_text)

        return all_results_text.strip()

    except Exception as e:
        logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–ª–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤–µ–±-–ø–æ–∏—Å–∫–∞: {e}", exc_info=True)
        st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤–µ–±-–ø–æ–∏—Å–∫–∞: {e}", icon="üï∏Ô∏è")
        return f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {e}"


# --- –§—É–Ω–∫—Ü–∏—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ (–±–µ–∑ —Å—É—â–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π) ---
def stream_ai_response(model_id_func, chat_history_func):
    # ... (–∫–æ–¥ stream_ai_response –∫–∞–∫ –≤ –ø—Ä–µ–¥—ã–¥—É—â–µ–π –≤–µ—Ä—Å–∏–∏) ...
    headers = {"Authorization": f"Bearer {OPENROUTER_API_KEY}","Content-Type": "application/json","HTTP-Referer": "http://localhost:8501","X-Title": "Streamlit Improved Search Chat AI"}
    if not isinstance(chat_history_func, list): logging.error("–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ –¥–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –ø–µ—Ä–µ–¥–∞–Ω–∞ –≤ –Ω–µ–≤–µ—Ä–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ."); yield None; return
    payload = {"model": model_id_func, "messages": chat_history_func, "stream": True}
    stream_successful = False
    try:
        logging.info(f"–ó–∞–ø—Ä–æ—Å —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –∫ –º–æ–¥–µ–ª–∏: {model_id_func}")
        response = requests.post(OPENROUTER_API_URL, headers=headers, json=payload, stream=True, timeout=STREAM_TIMEOUT)
        response.raise_for_status()
        logging.info("–°—Ç—Ä–∏–º–∏–Ω–≥ –Ω–∞—á–∞—Ç —É—Å–ø–µ—à–Ω–æ.")
        for line in response.iter_lines():
            if line:
                decoded_line = line.decode('utf-8')
                if decoded_line.startswith("data: "):
                    try:
                        json_data_str = decoded_line[len("data: "):].strip()
                        if json_data_str == "[DONE]": logging.info("–°—Ç—Ä–∏–º–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —Å–∏–≥–Ω–∞–ª–æ–º [DONE]."); break
                        if json_data_str:
                           chunk = json.loads(json_data_str)
                           delta = chunk.get("choices", [{}])[0].get("delta", {})
                           if delta and "content" in delta: delta_content = delta["content"]; stream_successful = True; yield delta_content
                    except json.JSONDecodeError as e: logging.warning(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON —á–∞–Ω–∫–∞: {e}. –°—Ç—Ä–æ–∫–∞: '{json_data_str}'"); continue
                    except Exception as e: logging.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–∞–Ω–∫–∞ —Å—Ç—Ä–∏–º–∞: {e}"); continue
        if not stream_successful: logging.warning("–°—Ç—Ä–∏–º–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è –±–µ–∑ –ø–µ—Ä–µ–¥–∞—á–∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞.")
    except requests.exceptions.Timeout: logging.error(f"–û—à–∏–±–∫–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞: –¢–∞–π–º–∞—É—Ç ({STREAM_TIMEOUT}s) —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å OpenRouter."); st.error(f"–¢–∞–π–º–∞—É—Ç ({STREAM_TIMEOUT} —Å–µ–∫) –ø—Ä–∏ –æ–∂–∏–¥–∞–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò.", icon="‚è±Ô∏è"); yield None
    except requests.exceptions.RequestException as e: logging.error(f"–û—à–∏–±–∫–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞: {e}"); st.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò: {e}", icon="üö®"); yield None
    except Exception as e: logging.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞: {e}", exc_info=True); st.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò.", icon="‚ùì"); yield None

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è ---
if "all_chats" not in st.session_state:
    logging.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏...")
    st.session_state.all_chats, st.session_state.active_chat = load_all_chats()
if "selected_mode" not in st.session_state:
    st.session_state.selected_mode = DEFAULT_MODE
if "web_search_enabled" not in st.session_state:
     st.session_state.web_search_enabled = False
     logging.warning("–°–æ—Å—Ç–æ—è–Ω–∏–µ web_search_enabled –Ω–µ –±—ã–ª–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –≤ False.")

# --- –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç ---
# (–õ–æ–≥–∏–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
if st.session_state.active_chat not in st.session_state.all_chats:
    logging.warning(f"–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç '{st.session_state.active_chat}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ —á–∞—Ç–æ–≤.")
    if st.session_state.all_chats: st.session_state.active_chat = list(st.session_state.all_chats.keys())[0]; logging.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π —á–∞—Ç: '{st.session_state.active_chat}'")
    else: new_name = generate_new_chat_name([]); st.session_state.all_chats = {new_name: []}; st.session_state.active_chat = new_name; logging.info(f"–°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤ –ø—É—Å—Ç. –°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —á–∞—Ç: '{new_name}'"); save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled)
active_chat_name = st.session_state.active_chat

# --- –°–∞–π–¥–±–∞—Ä ---
# (–ö–æ–¥ —Å–∞–π–¥–±–∞—Ä–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
with st.sidebar:
    st.markdown("## üí¨ –ß–∞—Ç—ã")
    chat_names = list(st.session_state.all_chats.keys())
    if chat_names:
        try: active_chat_index = chat_names.index(active_chat_name)
        except ValueError: logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: active_chat_name '{active_chat_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ chat_names."); active_chat_index = 0
        selected_chat = st.radio("–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç:",options=chat_names,index=active_chat_index,label_visibility="collapsed",key="chat_selector")
        if selected_chat is not None and selected_chat != active_chat_name: st.session_state.active_chat = selected_chat; logging.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —á–∞—Ç: {selected_chat}"); save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled); st.rerun()
    else: st.write("–ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤.")
    st.divider()
    if st.button("‚ûï –ù–æ–≤—ã–π —á–∞—Ç", key="new_chat_button"): new_name = generate_new_chat_name(list(st.session_state.all_chats.keys())); st.session_state.all_chats[new_name] = []; st.session_state.active_chat = new_name; logging.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —á–∞—Ç: {new_name}"); save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled); st.rerun()
    if chat_names:
        if st.button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π —á–∞—Ç", type="secondary", key="delete_chat_button"):
            current_chat_to_delete = st.session_state.active_chat; logging.info(f"–ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞: {current_chat_to_delete}")
            if current_chat_to_delete in st.session_state.all_chats:
                del st.session_state.all_chats[current_chat_to_delete]; logging.info(f"–ß–∞—Ç '{current_chat_to_delete}' —É–¥–∞–ª–µ–Ω."); remaining_chats = list(st.session_state.all_chats.keys())
                if remaining_chats: st.session_state.active_chat = remaining_chats[0]
                else: new_name = generate_new_chat_name([]); st.session_state.all_chats = {new_name: []}; st.session_state.active_chat = new_name; logging.info("–£–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Ç, —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π.")
                save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled); st.rerun()
            else: logging.warning(f"–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —á–∞—Ç: {current_chat_to_delete}")
    st.divider()
    search_toggled = st.toggle("üåê –í–µ–±-–ø–æ–∏—Å–∫", value=st.session_state.web_search_enabled, key="web_search_toggle")
    if search_toggled != st.session_state.web_search_enabled: st.session_state.web_search_enabled = search_toggled; logging.info(f"–í–µ–±-–ø–æ–∏—Å–∫ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–µ: {search_toggled}"); save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled)
    st.divider()
    mode_options = list(MODES.keys())
    try: current_mode_index = mode_options.index(st.session_state.selected_mode)
    except ValueError: logging.warning(f"–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º '{st.session_state.selected_mode}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ä–µ–∂–∏–º –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é."); st.session_state.selected_mode = DEFAULT_MODE; current_mode_index = 0
    selected_mode_radio = st.radio("–†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:", options=mode_options, index=current_mode_index, key="mode_selector")
    if selected_mode_radio is not None and selected_mode_radio != st.session_state.selected_mode: st.session_state.selected_mode = selected_mode_radio; logging.info(f"–í—ã–±—Ä–∞–Ω —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã: {selected_mode_radio}")

# --- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å: –ß–∞—Ç ---
current_mode_name = st.session_state.get("selected_mode", DEFAULT_MODE)
current_model_id = MODES.get(current_mode_name, MODES[DEFAULT_MODE])

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
# (–ö–æ–¥ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
chat_display_container = st.container()
with chat_display_container:
    if active_chat_name in st.session_state.all_chats:
        current_display_history = st.session_state.all_chats[active_chat_name]
        for message in current_display_history:
            avatar = "üßë‚Äçüíª" if message["role"] == "user" else "üí°"
            with st.chat_message(message["role"], avatar=avatar):
                st.markdown(message["content"], unsafe_allow_html=True) # unsafe_allow_html –≤–∞–∂–Ω–æ –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    else: st.warning(f"–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç '{active_chat_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω."); logging.warning(f"–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —á–∞—Ç–∞: {active_chat_name}")

# --- –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
# (–ö–æ–¥ –ø–æ–ª—è –≤–≤–æ–¥–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π)
if prompt := st.chat_input(f"–°–ø—Ä–æ—Å–∏ {current_mode_name}..."):
    if active_chat_name in st.session_state.all_chats:
        logging.info(f"–ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —á–∞—Ç–µ '{active_chat_name}'.")
        st.session_state.all_chats[active_chat_name].append({"role": "user", "content": prompt})
        save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled)
        st.rerun()
    else: st.error("–û—à–∏–±–∫–∞: –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", icon="‚ùå"); logging.error(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç '{active_chat_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω.")


# --- –õ–æ–≥–∏–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ò–ò (—Å —É–ª—É—á—à–µ–Ω–Ω—ã–º –ø–æ–∏—Å–∫–æ–º –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º–∏) ---
if active_chat_name in st.session_state.all_chats:
    current_chat_state = st.session_state.all_chats[active_chat_name]

    if current_chat_state and current_chat_state[-1]["role"] == "user":

        last_user_prompt = current_chat_state[-1]["content"]
        logging.info(f"\n--- –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –ò–ò –¥–ª—è —á–∞—Ç–∞ '{active_chat_name}' ---")
        logging.info(f"–ü—Ä–æ–º–ø—Ç: '{last_user_prompt[:100]}...' | –ü–æ–∏—Å–∫: {'–í–ö–õ' if st.session_state.web_search_enabled else '–í–´–ö–õ'}")

        current_date = datetime.datetime.now().strftime("%Y-%m-%d")
        search_results_str = ""
        search_performed_successfully = False
        context_for_ai = list(current_chat_state)
        needs_search = st.session_state.web_search_enabled
        system_prompt = {"role": "system"} # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–¥–µ—Å—å

        # --- –≠—Ç–∞–ø—ã –ø–æ–∏—Å–∫–∞ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω) ---
        if needs_search:
            logging.info(">>> –í–µ–±-–ø–æ–∏—Å–∫ –≤–∫–ª—é—á–µ–Ω.")
            generated_queries = []
            search_results_str = "–ü–æ–∏—Å–∫ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è." # –ù–∞—á–∞–ª—å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ

            # 1. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –í–û–ü–†–û–°–û–í
            try:
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º spinner –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ü–∏–∏
                with st.spinner("–ü–æ–¥–±–∏—Ä–∞—é –ø–æ–∏—Å–∫–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã... ü§î"):
                    generated_queries = generate_search_queries(last_user_prompt, current_model_id)
            except Exception as e:
                logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ generate_search_queries: {e}", exc_info=True)
                st.error("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã.", icon="‚ùì")
                # –ù–µ –ø—Ä–µ—Ä—ã–≤–∞–µ–º, –ø–æ–ø—Ä–æ–±—É–µ–º –∏—Å–∫–∞—Ç—å –ø–æ –∏—Å—Ö–æ–¥–Ω–æ–º—É –∑–∞–ø—Ä–æ—Å—É –Ω–∏–∂–µ

            # 2. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
            queries_to_search = generated_queries if generated_queries else [last_user_prompt]
            if not generated_queries:
                 logging.warning("–ü–æ–∏—Å–∫–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∏—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

            search_spinner_text = f"–ò—â—É –≤ —Å–µ—Ç–∏ –ø–æ {len(queries_to_search)} –≤–æ–ø—Ä–æ—Å–∞–º... üåê" if generated_queries else "–ò—â—É –≤ —Å–µ—Ç–∏ –ø–æ –≤–∞—à–µ–º—É –∑–∞–ø—Ä–æ—Å—É... üåê"
            try:
                with st.spinner(search_spinner_text):
                     search_results_str = perform_web_search(queries_to_search)

                # –ü—Ä–æ–≤–µ—Ä—è–µ–º —É—Å–ø–µ—à–Ω–æ—Å—Ç—å –ø–æ–∏—Å–∫–∞ –±–æ–ª–µ–µ —Å—Ç—Ä–æ–≥–æ
                if search_results_str and not any(err_msg in search_results_str for err_msg in ["–û—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞", "–Ω–µ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤", "–ù–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤", "–ù–µ –Ω–∞–π–¥–µ–Ω–æ —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö", "–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞"]):
                     search_performed_successfully = True
                     logging.info("–í–µ–±-–ø–æ–∏—Å–∫ –¥–∞–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã.")
                else:
                     logging.warning(f"–í–µ–±-–ø–æ–∏—Å–∫ –Ω–µ –¥–∞–ª –ø–æ–ª–µ–∑–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –∏–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –†–µ–∑—É–ª—å—Ç–∞—Ç: '{search_results_str}'")
                     # –û—Å—Ç–∞–≤–ª—è–µ–º search_performed_successfully = False

            except Exception as e:
                 logging.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ perform_web_search: {e}", exc_info=True)
                 st.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤–µ–±-–ø–æ–∏—Å–∫–∞.", icon="üï∏Ô∏è")
                 search_results_str = f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {e}" # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –¥–ª—è –ø—Ä–æ–º–ø—Ç–∞
                 search_performed_successfully = False

            # 3. –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –£–õ–£–ß–®–ï–ù–ù–û–ì–û —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞
            if search_performed_successfully:
                 # === –ù–û–í–´–ô –ü–†–û–ú–ü–¢ –î–õ–Ø –£–°–ü–ï–®–ù–û–ì–û –ü–û–ò–°–ö–ê ===
                 system_prompt["content"] = f"""–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}. –ë—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω –≤–µ–±-–ø–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø—Ä–∏–≤–µ–¥–µ–Ω—ã –Ω–∏–∂–µ.

**–¢–≤–æ—è –∑–∞–¥–∞—á–∞:** –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞ –∏ **—Å–∏–Ω—Ç–µ–∑–∏—Ä—É–π –∏–∑ –Ω–∏—Ö –µ–¥–∏–Ω—ã–π, —Å–≤—è–∑–Ω—ã–π –∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π –æ—Ç–≤–µ—Ç** –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –ù–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ—á–∏—Å–ª—è–π –Ω–∞–π–¥–µ–Ω–Ω—ã–µ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã. –ò—Å–ø–æ–ª—å–∑—É–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –∏–∑ –ø–æ–∏—Å–∫–∞ –∫–∞–∫ –æ—Å–Ω–æ–≤—É –¥–ª—è —Å–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞, –Ω–æ –∏–∑–ª–æ–∂–∏ –µ–µ —Å–≤–æ–∏–º–∏ —Å–ª–æ–≤–∞–º–∏. **–ü—Ä–∏–æ—Ä–∏—Ç–µ—Ç –æ—Ç–¥–∞–≤–∞–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –ø–æ–∏—Å–∫–∞**, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –æ–Ω–∞ –∫–∞–∂–µ—Ç—Å—è –±–æ–ª–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π, —á–µ–º —Ç–≤–æ–∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –∑–Ω–∞–Ω–∏—è. –ù–µ –≤–∫–ª—é—á–∞–π URL –∏–ª–∏ –ø—Ä—è–º—ã–µ —Å—Å—ã–ª–∫–∏ –≤ —Å–≤–æ–π –æ—Ç–≤–µ—Ç. –ù–µ —É–ø–æ–º–∏–Ω–∞–π —Å–∞–º —Ñ–∞–∫—Ç –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–∏—Å–∫–∞.

--- –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–µ–±-–ø–æ–∏—Å–∫–∞ ---
{search_results_str}
--- –ö–æ–Ω–µ—Ü —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞ ---

–û—Ç–≤–µ—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –Ω–∞ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ –ø–æ–∏—Å–∫–∞."""
                 logging.info("–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π —Å–∏–Ω—Ç–µ–∑–∞.")
            else:
                 # === –ù–û–í–´–ô –ü–†–û–ú–ü–¢ –î–õ–Ø –ù–ï–£–î–ê–ß–ù–û–ì–û –ü–û–ò–°–ö–ê ===
                 system_prompt["content"] = f"""–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}. –í–µ–±-–ø–æ–∏—Å–∫ –±—ã–ª –≤–∫–ª—é—á–µ–Ω, –Ω–æ, –∫ —Å–æ–∂–∞–ª–µ–Ω–∏—é, **–Ω–µ –¥–∞–ª —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤** (–ü—Ä–∏—á–∏–Ω–∞: '{search_results_str}').

**–¢–≤–æ—è –∑–∞–¥–∞—á–∞:** –û—Ç–≤–µ—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, **–æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ —Å–≤–æ–∏—Ö –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –∑–Ω–∞–Ω–∏—è—Ö**. –ü–æ—Å–∫–æ–ª—å–∫—É –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ –≤–µ–±–∞ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, **–æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**, —á—Ç–æ —Ç–≤–æ–π –æ—Ç–≤–µ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ —Å–∞–º—ã–º –ø–æ—Å–ª–µ–¥–Ω–∏–º –∏–ª–∏ –Ω–µ —É—á–∏—Ç—ã–≤–∞—Ç—å –Ω–µ–¥–∞–≤–Ω–∏–µ —Å–æ–±—ã—Ç–∏—è/–∏–∑–º–µ–Ω–µ–Ω–∏—è."""
                 logging.info("–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ –Ω–µ—É–¥–∞—á–Ω–æ–º –ø–æ–∏—Å–∫–µ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–µ–π –ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏—Ç—å.")
            # –í—Å—Ç–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ü–ï–†–ï–î –ø–æ—Å–ª–µ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            context_for_ai.insert(-1, system_prompt)

        else: # needs_search == False
            logging.info(">>> –í–µ–±-–ø–æ–∏—Å–∫ –≤—ã–∫–ª—é—á–µ–Ω.")
            system_prompt["content"] = f"–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}. –í–µ–±-–ø–æ–∏—Å–∫ –í–´–ö–õ–Æ–ß–ï–ù. –û—Ç–≤–µ—á–∞–π –Ω–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–≤–æ–∏—Ö –æ–±—â–∏—Ö –∑–Ω–∞–Ω–∏—è—Ö."
            context_for_ai.insert(-1, system_prompt) # –í—Å—Ç–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
            logging.info("–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω –±–µ–∑ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–∏—Å–∫–µ.")

        # === –ë–ª–æ–∫ —Å–±–æ—Ä–∞, –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ (–±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π, –∏—Å–ø–æ–ª—å–∑—É–µ—Ç st.spinner) ===
        final_response_to_save = None
        ai_response_error = False
        full_response_chunks = []

        spinner_message = "–ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç..."
        if needs_search:
            spinner_message = "–ê–Ω–∞–ª–∏–∑–∏—Ä—É—é –≤–µ–±-–¥–∞–Ω–Ω—ã–µ..." if search_performed_successfully else "–ü–æ–∏—Å–∫ –Ω–µ –ø–æ–º–æ–≥, –æ—Ç–≤–µ—á–∞—é..." # –û–±–Ω–æ–≤–∏–ª —Ç–µ–∫—Å—Ç

        logging.info("–ó–∞–ø—Ä–æ—Å –∏ —Å–±–æ—Ä —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò...")
        try:
            with st.spinner(spinner_message):
                response_generator = stream_ai_response(current_model_id, context_for_ai)
                for chunk in response_generator:
                    if chunk is None:
                        logging.error("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É (None).")
                        ai_response_error = True
                        break
                    if chunk:
                        full_response_chunks.append(chunk)

            if not ai_response_error:
                final_response_to_save = "".join(full_response_chunks)
                if final_response_to_save:
                    logging.info("–û—Ç–≤–µ—Ç –æ—Ç –ò–ò —É—Å–ø–µ—à–Ω–æ —Å–æ–±—Ä–∞–Ω.")
                else:
                    logging.warning("–û—Ç–≤–µ—Ç –æ—Ç –ò–ò –ø—É—Å—Ç –ø–æ—Å–ª–µ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞.")
                    st.warning("–ò–ò –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª –æ—Ç–≤–µ—Ç.", icon="ü§∑")
                    final_response_to_save = None

            if ai_response_error:
                 st.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò!", icon="üòî")

        except Exception as e:
             logging.error(f"–ù–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–±–æ—Ä–µ —Å—Ç—Ä–∏–º–∞ –æ—Ç–≤–µ—Ç–∞ –ò–ò: {e}", exc_info=True)
             st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –æ—Ç–≤–µ—Ç–∞ –ò–ò: {e}", icon="üí•")
             final_response_to_save = None
             ai_response_error = True

        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
        if final_response_to_save and not ai_response_error:
            logging.info("–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞...")
            try:
                with st.chat_message("assistant", avatar="üí°"):
                    st.markdown(final_response_to_save, unsafe_allow_html=True)
                logging.info("–ü–æ–ª–Ω—ã–π –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω.")

                if active_chat_name in st.session_state.all_chats:
                     current_history_for_save = st.session_state.all_chats[active_chat_name]
                     if not current_history_for_save or current_history_for_save[-1].get("role") != "assistant" or current_history_for_save[-1].get("content") != final_response_to_save:
                          current_history_for_save.append({"role": "assistant", "content": final_response_to_save})
                          save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled)
                          logging.info("–û—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")
                     else:
                          logging.warning("–û–±–Ω–∞—Ä—É–∂–µ–Ω–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø—Ä–æ–ø—É—â–µ–Ω–æ.")
                else:
                     logging.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞: —á–∞—Ç '{active_chat_name}' –∏—Å—á–µ–∑.")

            except Exception as render_error:
                 logging.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–µ —Ñ–∏–Ω–∞–ª—å–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è markdown: {render_error}", exc_info=True)
                 st.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –æ—Ç–≤–µ—Ç –ò–ò –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞: {render_error}", icon="üñºÔ∏è")

        elif ai_response_error:
             logging.info("–û—Ç–≤–µ—Ç –ò–ò –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏.")
        else:
             logging.info("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –æ—Ç –ò–ò, –Ω–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ –∏ –Ω–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–æ.")

        logging.info(f"--- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ò–ò –¥–ª—è —á–∞—Ç–∞ '{active_chat_name}' –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ---")
