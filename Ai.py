# -*- coding: utf-8 -*-
import streamlit as st
import requests
import os
import platform
import json
import datetime
from streamlit_local_storage import LocalStorage # –ò—Å–ø–æ–ª—å–∑—É–µ–º –µ–≥–æ –Ω–∞–ø—Ä—è–º—É—é
from duckduckgo_search import DDGS
import traceback
import re
import logging
from html import unescape
from typing import List, Dict, Optional, Any, Tuple, Generator

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è ---
# –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –±–æ–ª–µ–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ —É—Ä–æ–≤–µ–Ω—å INFO
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(levelname)s - [%(funcName)s] - %(message)s',
    datefmt='%Y-%m-%d %H:%M:%S'
)
logger = logging.getLogger(__name__)

# --- –ö–ª—é—á API –∏–∑ —Å–µ–∫—Ä–µ—Ç–æ–≤ Streamlit ---
# –ü–æ–ª—É—á–∞–µ–º –∫–ª—é—á API, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—è –µ–≥–æ –Ω–∞–ª–∏—á–∏–µ
OPENROUTER_API_KEY = st.secrets.get("OPENROUTER_API_KEY")

# --- –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã ---
# API –∏ –º–æ–¥–µ–ª–∏
OPENROUTER_API_URL: str = "https://openrouter.ai/api/v1/chat/completions"
# –û–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –∏–ª–∏ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ–º—ã–µ –º–æ–¥–µ–ª–∏ (–º–æ–∂–Ω–æ –ª–µ–≥–∫–æ –º–µ–Ω—è—Ç—å)
MODES: Dict[str, str] = {
    " Claude 3 Sonnet": "anthropic/claude-3-sonnet-20240229", # –î–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    " Mistral Large": "mistralai/mistral-large-latest", # –î–æ–±–∞–≤–ª–µ–Ω –¥–ª—è –ø—Ä–∏–º–µ—Ä–∞
    " DeepSeek V2": "deepseek/deepseek-chat", # –û–±–Ω–æ–≤–ª–µ–Ω
    " DeepThink (R1)": "deepseek/deepseek-r1:free", # –û—Å—Ç–∞–≤–ª–µ–Ω
    " –°—Ç–∞–Ω–¥–∞—Ä—Ç (V3)": "deepseek/deepseek-chat-v3-0324:free", # –û—Å—Ç–∞–≤–ª–µ–Ω
}
DEFAULT_MODE: str = " Claude 3 Sonnet" # –ò–∑–º–µ–Ω–µ–Ω –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π —Ä–µ–∂–∏–º

# –õ–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
LOCAL_STORAGE_KEY: str = "multi_chat_storage_v19" # –°–Ω–æ–≤–∞ —Å–º–µ–Ω–∏–ª –∫–ª—é—á –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
DEFAULT_CHAT_NAME: str = "–ù–æ–≤—ã–π —á–∞—Ç"

# –í–µ–±-–ø–æ–∏—Å–∫
MAX_SEARCH_RESULTS_PER_QUERY: int = 3 # –£–º–µ–Ω—å—à–∏–ª –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
MAX_QUERIES_TO_GENERATE: int = 2 # –£–º–µ–Ω—å—à–∏–ª –¥–ª—è —Å–∫–æ—Ä–æ—Å—Ç–∏
MAX_SNIPPET_LENGTH: int = 250 # –ù–µ–º–Ω–æ–≥–æ —É–º–µ–Ω—å—à–∏–ª
SEARCH_QUERY_GENERATION_MODEL: str = "deepseek/deepseek-chat" # –ö–æ–Ω–∫—Ä–µ—Ç–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤

# –°–µ—Ç—å –∏ —Ç–∞–π–º-–∞—É—Ç—ã
REQUEST_TIMEOUT: int = 30 # –û–±—â–∏–π —Ç–∞–π–º–∞—É—Ç –¥–ª—è –∑–∞–ø—Ä–æ—Å–æ–≤
STREAM_TIMEOUT: int = 180 # –¢–∞–π–º–∞—É—Ç –¥–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞

# –ó–∞–≥–æ–ª–æ–≤–∫–∏ –¥–ª—è API
HTTP_REFERER: str = "https://your-streamlit-app-url.com" # **–í–ê–ñ–ù–û:** –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ URL –≤–∞—à–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, –µ—Å–ª–∏ –¥–µ–ø–ª–æ–∏—Ç–µ
APP_TITLE: str = "Streamlit Advanced Chat AI"
HEADERS: Dict[str, str] = {
    "Authorization": f"Bearer {OPENROUTER_API_KEY}",
    "Content-Type": "application/json",
    "HTTP-Referer": HTTP_REFERER,
    "X-Title": APP_TITLE
}

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã Streamlit ---
st.set_page_config(
    page_title="–ß–∞—Ç –ò–ò Pro",
    page_icon="‚ú®",
    layout="wide",
    initial_sidebar_state="expanded"
)

# --- –£–ª—É—á—à–µ–Ω–Ω—ã–π CSS ---
st.markdown("""
<style>
    /* –û–±—â–∏–µ —Å—Ç–∏–ª–∏ */
    body {
        font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
    }

    /* –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã Streamlit */
    .main .block-container {
        padding-top: 1rem;
        padding-bottom: 5rem; /* –ë–æ–ª—å—à–µ –º–µ—Å—Ç–∞ —Å–Ω–∏–∑—É –¥–ª—è –ø–æ–ª—è –≤–≤–æ–¥–∞ */
        padding-left: 1.5rem;
        padding-right: 1.5rem;
    }

    /* –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞ */
    [data-testid="stChatMessage"] {
        background-color: rgba(0, 0, 0, 0.03); /* –õ–µ–≥–∫–∏–π —Ñ–æ–Ω –¥–ª—è —Å–æ–æ–±—â–µ–Ω–∏–π */
        border-radius: 0.5rem;
        padding: 0.8rem 1rem !important; /* –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–µ –æ—Ç—Å—Ç—É–ø—ã */
        margin-bottom: 1rem !important; /* –û—Ç—Å—Ç—É–ø –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ */
        border: 1px solid rgba(0, 0, 0, 0.05);
        box-shadow: 0 1px 3px rgba(0,0,0,0.03);
    }
    [data-testid="stChatMessage"] > div { /* –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –∞–≤–∞—Ç–∞—Ä–∞ –∏ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
        gap: 0.75rem;
    }
    [data-testid="stChatMessage"] .stChatMessageContent {
        padding: 0 !important;
    }
    [data-testid="stChatMessage"] .stChatMessageContent p {
        margin-bottom: 0.2rem;
        line-height: 1.6; /* –£–ª—É—á—à–∞–µ–º —á–∏—Ç–∞–µ–º–æ—Å—Ç—å —Ç–µ–∫—Å—Ç–∞ */
    }
    /* –í—ã–¥–µ–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
    [data-testid="stChatMessage"][data-testid="chatAvatarIcon-user"] {
         background-color: rgba(80, 137, 207, 0.08); /* –ù–µ–º–Ω–æ–≥–æ –¥—Ä—É–≥–æ–π —Ñ–æ–Ω –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */
         border-color: rgba(80, 137, 207, 0.2);
    }

    /* –°–∞–π–¥–±–∞—Ä */
    [data-testid="stSidebar"] {
        padding: 1.5rem 1rem;
        background-color: #f8f9fa; /* –°–≤–µ—Ç–ª—ã–π —Ñ–æ–Ω —Å–∞–π–¥–±–∞—Ä–∞ */
        border-right: 1px solid #e9ecef;
    }
    [data-testid="stSidebar"] h2 {
        text-align: center;
        margin-bottom: 1.5rem;
        font-size: 1.3rem;
        color: #343a40;
    }
    [data-testid="stSidebar"] .stButton button {
        width: 100%;
        margin-bottom: 0.6rem;
        border-radius: 0.3rem; /* –ú–µ–Ω–µ–µ —Å–∫—Ä—É–≥–ª–µ–Ω–Ω—ã–µ –∫–Ω–æ–ø–∫–∏ */
        font-weight: 500;
        background-color: #ffffff; /* –ë–µ–ª—ã–µ –∫–Ω–æ–ø–∫–∏ */
        border: 1px solid #ced4da;
        color: #495057;
        transition: background-color 0.2s ease, border-color 0.2s ease;
    }
    [data-testid="stSidebar"] .stButton button:hover {
        background-color: #f1f3f5;
        border-color: #adb5bd;
    }
    [data-testid="stSidebar"] .stButton button:active {
        background-color: #e9ecef;
    }
    /* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è - –∫—Ä–∞—Å–Ω–∞—è */
    [data-testid="stSidebar"] .stButton[data-testid*="delete_chat_button"] button {
        background-color: #f8d7da;
        border-color: #f5c6cb;
        color: #721c24;
    }
    [data-testid="stSidebar"] .stButton[data-testid*="delete_chat_button"] button:hover {
        background-color: #f1b0b7;
        border-color: #eba3ab;
    }
    /* –†–∞–¥–∏–æ-–∫–Ω–æ–ø–∫–∏ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å */
    [data-testid="stSidebar"] .stRadio [data-testid="stWidgetLabel"],
    [data-testid="stSidebar"] [data-testid="stToggle"] label {
        font-size: 0.95rem;
        margin-bottom: 0.4rem;
        font-weight: 600;
        color: #495057;
    }
    [data-testid="stSidebar"] .stRadio > div { /* –û—Ç—Å—Ç—É–ø—ã –¥–ª—è —Ä–∞–¥–∏–æ */
        padding: 0.1rem 0;
    }
    [data-testid="stSidebar"] [data-testid="stToggle"] { /* –û—Ç—Å—Ç—É–ø –¥–ª—è –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—è */
         margin-top: 0.5rem;
    }

    /* –ü–æ–ª–µ –≤–≤–æ–¥–∞ */
    [data-testid="stChatInput"] {
      background-color: #ffffff;
      border-top: 1px solid #e9ecef;
      padding: 0.75rem 1.5rem; /* –û—Ç—Å—Ç—É–ø—ã –≤–æ–∫—Ä—É–≥ –ø–æ–ª—è –≤–≤–æ–¥–∞ */
      position: fixed; /* –§–∏–∫—Å–∏—Ä—É–µ–º –≤–Ω–∏–∑—É */
      bottom: 0;
      left: 0;
      right: 0;
      z-index: 100; /* –ü–æ–≤–µ—Ä—Ö –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ */
      box-shadow: 0 -2px 5px rgba(0,0,0,0.05);
    }
    [data-testid="stChatInput"] textarea {
        border-radius: 0.3rem;
        border: 1px solid #ced4da;
        background-color: #f8f9fa; /* –õ–µ–≥–∫–∏–π —Ñ–æ–Ω –¥–ª—è –ø–æ–ª—è */
    }
    [data-testid="stChatInput"] textarea:focus {
        border-color: #80bdff;
        box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
    }

    /* –°–ø–∏–Ω–Ω–µ—Ä */
    [data-testid="stSpinner"] > div > div {
        /* –°—Ç–∏–ª–∏–∑–∞—Ü–∏—è —Å–∞–º–æ–≥–æ —Å–ø–∏–Ω–Ω–µ—Ä–∞ (–∫—Ä—É—Ç–∏–ª–∫–∏) */
        border-top-color: #0d6efd; /* –¶–≤–µ—Ç —Å–ø–∏–Ω–Ω–µ—Ä–∞ */
    }

    /* –°—Ç–∏–ª–∏ –¥–ª—è markdown –≤–Ω—É—Ç—Ä–∏ —Å–æ–æ–±—â–µ–Ω–∏–π */
    .stChatMessageContent code {
        background-color: rgba(0,0,0,0.06);
        padding: 0.2em 0.4em;
        border-radius: 3px;
        font-size: 85%;
    }
    .stChatMessageContent pre code {
        background-color: #f1f3f5;
        border: 1px solid #dee2e6;
        display: block;
        padding: 0.5rem 0.7rem;
        overflow-x: auto;
    }
    .stChatMessageContent blockquote {
        border-left: 3px solid #adb5bd;
        padding-left: 1rem;
        margin-left: 0;
        color: #6c757d;
    }
</style>
""", unsafe_allow_html=True)

# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ API –∫–ª—é—á–∞ ---
if not OPENROUTER_API_KEY:
    st.error("‚õî –ö–ª—é—á API OpenRouter (`OPENROUTER_API_KEY`) –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–µ–∫—Ä–µ—Ç–∞—Ö Streamlit!", icon="üö®")
    logger.critical("–ö–ª—é—á API OpenRouter –Ω–µ –Ω–∞–π–¥–µ–Ω.")
    st.stop() # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è LocalStorage ---
# –û–±–µ—Ä–Ω—É—Ç–æ –≤ try-except –¥–ª—è –±–æ–ª—å—à–µ–π –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
try:
    localS = LocalStorage()
    logger.info("LocalStorage –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —É—Å–ø–µ—à–Ω–æ.")
except Exception as e:
    logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ LocalStorage: {e}", exc_info=True)
    st.error("–ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ª–æ–∫–∞–ª—å–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ. –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–æ–≤ –Ω–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω—è—Ç—å—Å—è –º–µ–∂–¥—É —Å–µ—Å—Å–∏—è–º–∏.", icon="üö®")
    localS = None # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤ None, —á—Ç–æ–±—ã —Ñ—É–Ω–∫—Ü–∏–∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç–∞–ª–∏

# --- –§—É–Ω–∫—Ü–∏–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —á–∞—Ç–∞–º–∏ ---

def load_all_chats() -> Tuple[Dict[str, List[Dict[str, str]]], Optional[str]]:
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç –≤—Å–µ —á–∞—Ç—ã –∏ –∏–º—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ –∏–∑ LocalStorage."""
    default_chats: Dict[str, List[Dict[str, str]]] = {f"{DEFAULT_CHAT_NAME} 1": []}
    default_active: str = f"{DEFAULT_CHAT_NAME} 1"
    initial_search_state: bool = False # –ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø–æ–∏—Å–∫ –≤—ã–∫–ª—é—á–µ–Ω

    # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–∏—Å–∫–∞ –≤ session_state, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
    if "web_search_enabled" not in st.session_state:
        st.session_state.web_search_enabled = initial_search_state

    if not localS:
        logger.warning("LocalStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, –≤–æ–∑–≤—Ä–∞—Ç —á–∞—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
        return default_chats, default_active

    data_str = localS.getItem(LOCAL_STORAGE_KEY)
    if not data_str:
        logger.info("–î–∞–Ω–Ω—ã–µ –≤ LocalStorage –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –≤–æ–∑–≤—Ä–∞—Ç —á–∞—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
        return default_chats, default_active

    try:
        data = json.loads(data_str)
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É –¥–∞–Ω–Ω—ã—Ö
        if isinstance(data, dict) and "chats" in data and "active_chat" in data and isinstance(data["chats"], dict):
            loaded_chats: Dict[str, List[Dict[str, str]]] = {}
            active_chat_name: Optional[str] = data["active_chat"]

            # –û—á–∏—Å—Ç–∫–∞ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞–∂–¥–æ–≥–æ —á–∞—Ç–∞
            for name, history in data["chats"].items():
                if isinstance(history, list):
                    # –§–∏–ª—å—Ç—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Å—Ç–∞–≤–ª—è—è —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ
                    valid_history = [
                        msg for msg in history
                        if isinstance(msg, dict) and msg.get("role") in ["user", "assistant"] and isinstance(msg.get("content"), str)
                    ]
                    loaded_chats[name] = valid_history
                else:
                    logger.warning(f"–ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞ '{name}' –∏–º–µ–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç (–Ω–µ —Å–ø–∏—Å–æ–∫), –ø—Ä–æ–ø—É—Å–∫–∞–µ—Ç—Å—è.")

            # –ï—Å–ª–∏ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ —á–∞—Ç–æ–≤ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –¥–µ—Ñ–æ–ª—Ç–Ω—ã–µ
            if not loaded_chats:
                logger.warning("–ü–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏ –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å –≤–∞–ª–∏–¥–Ω—ã—Ö —á–∞—Ç–æ–≤, –≤–æ–∑–≤—Ä–∞—Ç –∫ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–º.")
                st.session_state.web_search_enabled = initial_search_state # –°–±—Ä–æ—Å –ø–æ–∏—Å–∫–∞
                return default_chats, default_active

            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
            if active_chat_name not in loaded_chats:
                fallback_active = list(loaded_chats.keys())[0]
                logger.warning(f"–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç '{active_chat_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –∑–∞–≥—Ä—É–∂–µ–Ω–Ω—ã—Ö —á–∞—Ç–∞—Ö, –≤—ã–±—Ä–∞–Ω –ø–µ—Ä–≤—ã–π –¥–æ—Å—Ç—É–ø–Ω—ã–π: '{fallback_active}'.")
                active_chat_name = fallback_active

            # –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ–±-–ø–æ–∏—Å–∫–∞
            st.session_state.web_search_enabled = data.get("web_search_enabled", initial_search_state)
            logger.info(f"–ß–∞—Ç—ã —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω—ã. –ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç: '{active_chat_name}'. –í–µ–±-–ø–æ–∏—Å–∫: {st.session_state.web_search_enabled}.")
            return loaded_chats, active_chat_name
        else:
            logger.warning("–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö –≤ LocalStorage –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞, –≤–æ–∑–≤—Ä–∞—Ç —á–∞—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.")
            st.session_state.web_search_enabled = initial_search_state # –°–±—Ä–æ—Å –ø–æ–∏—Å–∫–∞
            return default_chats, default_active
    except json.JSONDecodeError as e:
        logger.error(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON –∏–∑ LocalStorage: {e}. –í–æ–∑–≤—Ä–∞—Ç —á–∞—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.", exc_info=True)
        st.session_state.web_search_enabled = initial_search_state # –°–±—Ä–æ—Å –ø–æ–∏—Å–∫–∞
        return default_chats, default_active
    except Exception as e:
        logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —á–∞—Ç–æ–≤: {e}. –í–æ–∑–≤—Ä–∞—Ç —á–∞—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é.", exc_info=True)
        st.session_state.web_search_enabled = initial_search_state # –°–±—Ä–æ—Å –ø–æ–∏—Å–∫–∞
        return default_chats, default_active


def save_all_chats(chats_dict: Dict[str, List[Dict[str, str]]], active_chat_name: Optional[str], web_search_state: bool) -> bool:
    """–°–æ—Ö—Ä–∞–Ω—è–µ—Ç –≤—Å–µ —á–∞—Ç—ã, –∏–º—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ –∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ–±-–ø–æ–∏—Å–∫–∞ –≤ LocalStorage."""
    if not localS:
        logger.warning("LocalStorage –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ.")
        return False
    if not isinstance(chats_dict, dict):
        logger.error("–ü–æ–ø—ã—Ç–∫–∞ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —á–∞—Ç—ã –Ω–µ–≤–µ—Ä–Ω–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∞ (–Ω–µ —Å–ª–æ–≤–∞—Ä—å).")
        return False

    # –û—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
    cleaned_chats: Dict[str, List[Dict[str, str]]] = {}
    for name, history in chats_dict.items():
        if isinstance(history, list):
            cleaned_chats[name] = [
                msg for msg in history
                if isinstance(msg, dict) and msg.get("role") in ["user", "assistant"] and isinstance(msg.get("content"), str)
            ]
        else:
            logger.warning(f"–ü—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∞ –Ω–µ–≤–µ—Ä–Ω–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è —á–∞—Ç–∞ '{name}', –±—É–¥–µ—Ç –ø—Ä–æ–ø—É—â–µ–Ω–∞.")

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞
    if not cleaned_chats:
        active_chat_name = None # –ù–µ—Ç —á–∞—Ç–æ–≤ - –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ
        logger.info("–ù–µ—Ç —á–∞—Ç–æ–≤ –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")
    elif active_chat_name not in cleaned_chats:
        fallback_active = list(cleaned_chats.keys())[0] if cleaned_chats else None
        logger.warning(f"–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç '{active_chat_name}' –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω, –≤—ã–±—Ä–∞–Ω: {fallback_active}")
        active_chat_name = fallback_active

    data_to_save: Dict[str, Any] = {
        "chats": cleaned_chats,
        "active_chat": active_chat_name,
        "web_search_enabled": web_search_state
    }

    try:
        localS.setItem(LOCAL_STORAGE_KEY, json.dumps(data_to_save))
        logger.info(f"–ß–∞—Ç—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã. –ê–∫—Ç–∏–≤–Ω—ã–π: '{active_chat_name}', –ü–æ–∏—Å–∫: {web_search_state}.")
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —á–∞—Ç–æ–≤ –≤ LocalStorage: {e}", exc_info=True)
        st.toast("–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —á–∞—Ç–∞!", icon="üö®")
        return False


def generate_new_chat_name(existing_names: List[str]) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –¥–ª—è –Ω–æ–≤–æ–≥–æ —á–∞—Ç–∞."""
    i = 1
    base_name = DEFAULT_CHAT_NAME
    while f"{base_name} {i}" in existing_names:
        i += 1
    return f"{base_name} {i}"


# --- –§—É–Ω–∫—Ü–∏–∏ –ø–æ–∏—Å–∫–∞ –∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–ø—Ä–æ—Å–æ–≤ ---

def generate_search_queries(user_prompt: str) -> List[str]:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã (–≤–æ–ø—Ä–æ—Å—ã) –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–æ–º–ø—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –ø–æ–º–æ—â—å—é LLM."""
    current_date_str = datetime.datetime.now().strftime('%d %B %Y')
    generation_prompt = f"""–ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä—É–π —Å–ª–µ–¥—É—é—â–∏–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –¥–æ {MAX_QUERIES_TO_GENERATE} –≤—ã—Å–æ–∫–æ–∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö, **–ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã—Ö –ø–æ–∏—Å–∫–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ**. –≠—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –ø–æ–º–æ—á—å –Ω–∞–π—Ç–∏ —Å–∞–º—É—é —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—É—é –∏ –∞–∫—Ç—É–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –ø–æ —Ç–µ–º–µ.

**–¢—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ –≤–æ–ø—Ä–æ—Å–∞–º:**
- –§–æ—Ä–º—É–ª–∏—Ä—É–π –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –æ–ø–∏—Å–∞—Ç–µ–ª—å–Ω—ã–µ —Ñ—Ä–∞–∑—ã, –∫–∞–∫ –µ—Å–ª–∏ –±—ã —Å–ø—Ä–∞—à–∏–≤–∞–ª —á–µ–ª–æ–≤–µ–∫.
- **–ò–∑–±–µ–≥–∞–π –ø—Ä–æ—Å—Ç—ã—Ö –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤.**
- –£—á–∏—Ç—ã–≤–∞–π –≤–æ–∑–º–æ–∂–Ω—É—é –ø–æ—Ç—Ä–µ–±–Ω–æ—Å—Ç—å –≤ —Å–≤–µ–∂–µ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ (—Å–µ–≥–æ–¥–Ω—è {current_date_str}).
- –í–æ–ø—Ä–æ—Å—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–ø—Ä—è–º—É—é —Å–≤—è–∑–∞–Ω—ã —Å –æ—Å–Ω–æ–≤–Ω–æ–π —Ç–µ–º–æ–π –∑–∞–ø—Ä–æ—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.

**–ü—Ä–∏–º–µ—Ä—ã —Ö–æ—Ä–æ—à–∏—Ö –≤–æ–ø—Ä–æ—Å–æ–≤:**
- –ö–∞–∫–æ–≤—ã –ø–æ—Å–ª–µ–¥–Ω–∏–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –≤ [–æ–±–ª–∞—Å—Ç—å]?
- –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç [—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è] –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏?
- –°—Ä–∞–≤–Ω–µ–Ω–∏–µ [–ø—Ä–æ–¥—É–∫—Ç –ê] –∏ [–ø—Ä–æ–¥—É–∫—Ç –ë] –≤ {datetime.datetime.now().year} –≥–æ–¥—É: –ø–ª—é—Å—ã –∏ –º–∏–Ω—É—Å—ã.
- –ü–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–æ–≤–æ—Å—Ç–∏ –æ [—Å–æ–±—ã—Ç–∏–µ/–∫–æ–º–ø–∞–Ω–∏—è].
- –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏ –¥–ª—è [–∑–∞–¥–∞—á–∞].

**–í—ã–≤–æ–¥:**
–í—ã–≤–µ–¥–∏ —Ç–æ–ª—å–∫–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –∫–∞–∂–¥—ã–π –Ω–∞ –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–µ. –ë–µ–∑ –Ω—É–º–µ—Ä–∞—Ü–∏–∏, –º–∞—Ä–∫–µ—Ä–æ–≤ –∏–ª–∏ –∫–∞–≤—ã—á–µ–∫.

**–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:**
"{user_prompt}"

**–ü–æ–∏—Å–∫–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã:**"""

    payload = {
        "model": SEARCH_QUERY_GENERATION_MODEL,
        "messages": [{"role": "user", "content": generation_prompt}],
        "max_tokens": 150,
        "temperature": 0.5, # –ß—É—Ç—å –≤—ã—à–µ –¥–ª—è —Ä–∞–∑–Ω–æ–æ–±—Ä–∞–∑–∏—è
        "stop": ["\n\n"], # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º—Å—è –Ω–∞ –¥–≤–æ–π–Ω–æ–º –ø–µ—Ä–µ–Ω–æ—Å–µ —Å—Ç—Ä–æ–∫–∏
    }
    generated_queries: List[str] = []

    try:
        logger.info(f"–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –í–û–ü–†–û–°–û–í –¥–ª—è: '{user_prompt[:50]}...'")
        response = requests.post(OPENROUTER_API_URL, headers=HEADERS, json=payload, timeout=REQUEST_TIMEOUT)
        response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ HTTP –æ—à–∏–±–∫–∏
        data = response.json()
        raw_queries_text = data.get("choices", [{}])[0].get("message", {}).get("content", "")

        if raw_queries_text:
            # –û—á–∏—Å—Ç–∫–∞ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç—Ä–æ–∫
            potential_queries = raw_queries_text.strip().split('\n')
            generated_queries = [
                re.sub(r"^\s*[\d\.\-\*]+\s*", "", q.strip()).strip('" ') # –£–¥–∞–ª—è–µ–º –Ω—É–º–µ—Ä–∞—Ü–∏—é/–º–∞—Ä–∫–µ—Ä—ã –∏ –∫–∞–≤—ã—á–∫–∏
                for q in potential_queries if q.strip() and len(q.strip()) > 5 # –û—Ç—Å–µ–∏–≤–∞–µ–º –ø—É—Å—Ç—ã–µ –∏ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–µ —Å—Ç—Ä–æ–∫–∏
            ]
            logger.info(f"  –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ {len(generated_queries)} –≤–æ–ø—Ä–æ—Å–æ–≤: {generated_queries}")
        else:
            logger.warning("  API –Ω–µ –≤–µ—Ä–Ω—É–ª–æ —Ç–µ–∫—Å—Ç –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤.")

    except requests.exceptions.Timeout:
        logger.error("  –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤: –¢–∞–π–º–∞—É—Ç.")
        st.toast("–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ –ø–æ–¥–±–æ—Ä–µ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.", icon="‚è±Ô∏è")
    except requests.exceptions.RequestException as e:
        logger.error(f"  –û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}")
        st.toast(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –ø—Ä–∏ –ø–æ–¥–±–æ—Ä–µ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}", icon="üö®")
    except Exception as e:
        logger.error(f"  –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –≤–æ–ø—Ä–æ—Å–æ–≤: {e}", exc_info=True)
        st.toast("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–æ–±—Ä–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã.", icon="‚ùì")

    # –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–µ –±–æ–ª–µ–µ MAX_QUERIES_TO_GENERATE
    return generated_queries[:MAX_QUERIES_TO_GENERATE]


def clean_html(raw_html: Optional[str]) -> str:
    """–£–¥–∞–ª—è–µ—Ç HTML —Ç–µ–≥–∏ –∏ –¥–µ–∫–æ–¥–∏—Ä—É–µ—Ç HTML —Å—É—â–Ω–æ—Å—Ç–∏."""
    if not isinstance(raw_html, str):
        return ""
    # –£–¥–∞–ª—è–µ–º —Ç–µ–≥–∏
    cleanr = re.compile('<.*?>')
    cleantext = re.sub(cleanr, '', raw_html)
    # –î–µ–∫–æ–¥–∏—Ä—É–µ–º —Å—É—â–Ω–æ—Å—Ç–∏ —Ç–∏–ø–∞ &
    cleantext = unescape(cleantext)
    # –£–¥–∞–ª—è–µ–º –ª–∏—à–Ω–∏–µ –ø—Ä–æ–±–µ–ª—ã
    cleantext = re.sub(r'\s+', ' ', cleantext).strip()
    return cleantext


def perform_web_search(queries: List[str]) -> Tuple[str, bool]:
    """–í—ã–ø–æ–ª–Ω—è–µ—Ç –≤–µ–±-–ø–æ–∏—Å–∫ –ø–æ —Å–ø–∏—Å–∫—É –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –ø–æ–º–æ—â—å—é DuckDuckGo Search."""
    all_results_text: str = ""
    search_errors: List[str] = []
    search_performed_successfully: bool = False

    if not queries:
        logger.warning("–ù–µ—Ç –∑–∞–ø—Ä–æ—Å–æ–≤ –¥–ª—è –≤–µ–±-–ø–æ–∏—Å–∫–∞.")
        return "–í–µ–±-–ø–æ–∏—Å–∫ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è, —Ç–∞–∫ –∫–∞–∫ –Ω–µ –±—ã–ª–æ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –∏–ª–∏ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤.", False

    logger.info(f"–ù–∞—á–∏–Ω–∞—é –≤–µ–±-–ø–æ–∏—Å–∫ –ø–æ {len(queries)} –∑–∞–ø—Ä–æ—Å–∞–º...")
    aggregated_results: List[Dict[str, str]] = []

    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º –º–µ–Ω–µ–¥–∂–µ—Ä –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è DDGS
        with DDGS(timeout=REQUEST_TIMEOUT) as ddgs:
            for idx, query in enumerate(queries, 1):
                query_log = f"'{query[:60]}...'" if len(query) > 60 else f"'{query}'"
                logger.info(f"  [–ü–æ–∏—Å–∫ {idx}/{len(queries)}] –ó–∞–ø—Ä–æ—Å: {query_log}")
                try:
                    # –ü–æ–ª—É—á–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ–∏—Å–∫–∞
                    search_results = list(ddgs.text(query, max_results=MAX_SEARCH_RESULTS_PER_QUERY))
                    # –û—á–∏—â–∞–µ–º –∑–∞–≥–æ–ª–æ–≤–∫–∏ –∏ —Å–Ω–∏–ø–ø–µ—Ç—ã
                    for result in search_results:
                        result['title'] = clean_html(result.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞'))
                        result['body'] = clean_html(result.get('body', '')) # –û—á–∏—â–∞–µ–º —Ç–µ–ª–æ
                    aggregated_results.extend(search_results)
                    logger.info(f"    –ù–∞–π–¥–µ–Ω–æ {len(search_results)} —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –¥–ª—è {query_log}.")
                except Exception as e:
                    logger.error(f"    –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –ø–æ –∑–∞–ø—Ä–æ—Å—É {query_log}: {e}", exc_info=True)
                    search_errors.append(query_log) # –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–±–ª–µ–º–Ω—ã–π –∑–∞–ø—Ä–æ—Å –≤ —Å–ø–∏—Å–æ–∫

        if search_errors:
            st.toast(f"–ü—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ –ø–æ–∏—Å–∫–µ –ø–æ: {', '.join(search_errors)}", icon="üï∏Ô∏è")

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ –∏ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        if aggregated_results:
            # –§–∏–ª—å—Ç—Ä—É–µ–º –¥—É–±–ª–∏–∫–∞—Ç—ã –ø–æ –æ—á–∏—â–µ–Ω–Ω–æ–º—É —Ç–µ–∫—Å—Ç—É —Å–Ω–∏–ø–ø–µ—Ç–∞ (body)
            unique_results_dict: Dict[str, Dict[str, str]] = {}
            for res in aggregated_results:
                body = res.get('body')
                # –î–æ–±–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —Ç–µ–ª–æ –∏ —Ç–∞–∫–æ–≥–æ —Ç–µ–ª–∞ –µ—â–µ –Ω–µ –±—ã–ª–æ
                if body and body not in unique_results_dict:
                    unique_results_dict[body] = res

            unique_results = list(unique_results_dict.values())
            logger.info(f"–í—Å–µ–≥–æ –Ω–∞–π–¥–µ–Ω–æ: {len(aggregated_results)}, –£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö (–ø–æ —Å–Ω–∏–ø–ø–µ—Ç—É): {len(unique_results)}")

            if unique_results:
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç–æ–≤–æ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
                result_lines = []
                for i, res in enumerate(unique_results, 1):
                    title = res.get('title', '–ë–µ–∑ –∑–∞–≥–æ–ª–æ–≤–∫–∞')
                    body = res.get('body', '')
                    # –û–±—Ä–µ–∑–∞–µ–º —Å–Ω–∏–ø–ø–µ—Ç, –µ—Å–ª–∏ –æ–Ω —Å–ª–∏—à–∫–æ–º –¥–ª–∏–Ω–Ω—ã–π
                    snippet = (body[:MAX_SNIPPET_LENGTH] + '...') if len(body) > MAX_SNIPPET_LENGTH else body
                    result_lines.append(f"–ò—Å—Ç–æ—á–Ω–∏–∫ {i}: {title}\n–°–Ω–∏–ø–ø–µ—Ç: {snippet}")

                all_results_text = "\n\n".join(result_lines)
                search_performed_successfully = True # –ü–æ–∏—Å–∫ —É—Å–ø–µ—à–µ–Ω, –µ—Å—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
                logger.info("–í–µ–±-–ø–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ, —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –æ—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω—ã.")
            else:
                all_results_text = "–í–µ–±-–ø–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —É–Ω–∏–∫–∞–ª—å–Ω—ã—Ö —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ—Å–ª–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏."
                logger.info(all_results_text)
                # search_performed_successfully –æ—Å—Ç–∞–µ—Ç—Å—è False
        else:
            all_results_text = "–í–µ–±-–ø–æ–∏—Å–∫ –Ω–µ –≤–µ—Ä–Ω—É–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤."
            logger.info(all_results_text)
            # search_performed_successfully –æ—Å—Ç–∞–µ—Ç—Å—è False

        return all_results_text.strip(), search_performed_successfully

    except Exception as e:
        logger.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤–µ–±-–ø–æ–∏—Å–∫–∞: {e}", exc_info=True)
        st.error(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {e}", icon="üï∏Ô∏è")
        return f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤–µ–±-–ø–æ–∏—Å–∫–∞: {e}", False


# --- –§—É–Ω–∫—Ü–∏—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ –ò–ò ---

def stream_ai_response(model_id: str, chat_history: List[Dict[str, str]]) -> Generator[Optional[str], None, None]:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∑–∞–ø—Ä–æ—Å –∫ API –∏ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞."""
    if not isinstance(chat_history, list) or not chat_history:
        logger.error("–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ –¥–ª—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞.")
        yield None # –°–∏–≥–Ω–∞–ª –æ–± –æ—à–∏–±–∫–µ
        return

    payload = {
        "model": model_id,
        "messages": chat_history,
        "stream": True
        # –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –¥—Ä—É–≥–∏–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã: temperature, max_tokens –∏ —Ç.–¥.
        # "temperature": 0.7,
        # "max_tokens": 1024,
    }
    stream_successful: bool = False
    response = None # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é response

    try:
        logger.info(f"–ó–∞–ø—Ä–æ—Å —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –∫ –º–æ–¥–µ–ª–∏: {model_id}")
        response = requests.post(
            OPENROUTER_API_URL,
            headers=HEADERS,
            json=payload,
            stream=True,
            timeout=(REQUEST_TIMEOUT, STREAM_TIMEOUT) # –¢–∞–π–º–∞—É—Ç –Ω–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∏ —á—Ç–µ–Ω–∏–µ
        )
        response.raise_for_status() # –ü—Ä–æ–≤–µ—Ä—è–µ–º HTTP —Å—Ç–∞—Ç—É—Å (4xx, 5xx)
        logger.info("–°—Ç—Ä–∏–º–∏–Ω–≥ –Ω–∞—á–∞—Ç —É—Å–ø–µ—à–Ω–æ.")

        # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–æ—Ç–æ–∫ –æ—Ç–≤–µ—Ç–∞
        for line in response.iter_lines():
            if line:
                decoded_line = line.decode('utf-8')
                if decoded_line.startswith("data: "):
                    try:
                        json_data_str = decoded_line[len("data: "):].strip()
                        if json_data_str == "[DONE]":
                            logger.info("–°—Ç—Ä–∏–º–∏–Ω–≥ –∑–∞–≤–µ—Ä—à–µ–Ω —Å–∏–≥–Ω–∞–ª–æ–º [DONE].")
                            break # –ù–æ—Ä–º–∞–ª—å–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Å—Ç—Ä–∏–º–∞
                        if json_data_str:
                            chunk = json.loads(json_data_str)
                            delta = chunk.get("choices", [{}])[0].get("delta", {})
                            delta_content = delta.get("content") # –ú–æ–∂–µ—Ç –±—ã—Ç—å None
                            if delta_content: # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å –∫–æ–Ω—Ç–µ–Ω—Ç
                                stream_successful = True
                                yield delta_content
                    except json.JSONDecodeError:
                        logger.warning(f"–û—à–∏–±–∫–∞ –¥–µ–∫–æ–¥–∏—Ä–æ–≤–∞–Ω–∏—è JSON —á–∞–Ω–∫–∞: '{json_data_str}'")
                        continue # –ü—Ä–æ–ø—É—Å–∫–∞–µ–º –ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω—ã–π —á–∞–Ω–∫
                    except Exception as e:
                        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —á–∞–Ω–∫–∞ —Å—Ç—Ä–∏–º–∞: {e}", exc_info=True)
                        continue # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É —Å–ª–µ–¥—É—é—â–∏—Ö —á–∞–Ω–∫–æ–≤

        # –ü—Ä–æ–≤–µ—Ä–∫–∞, –±—ã–ª –ª–∏ —Ö–æ—Ç—å –∫–∞–∫–æ–π-—Ç–æ –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ–ª—É—á–µ–Ω
        if not stream_successful:
            logger.warning("–°—Ç—Ä–∏–º –∑–∞–≤–µ—Ä—à–∏–ª—Å—è, –Ω–æ –Ω–µ –±—ã–ª–æ –ø–æ–ª—É—á–µ–Ω–æ –Ω–∏ –æ–¥–Ω–æ–≥–æ —á–∞–Ω–∫–∞ —Å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º.")
            # –ù–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ–º None –∑–¥–µ—Å—å, —Ç.–∫. —ç—Ç–æ –Ω–µ –æ—à–∏–±–∫–∞ —Å–µ—Ç–∏/API, –∞ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç

    except requests.exceptions.Timeout as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞: –¢–∞–π–º–∞—É—Ç ({STREAM_TIMEOUT}s). {e}")
        yield None # –°–∏–≥–Ω–∞–ª –æ–± –æ—à–∏–±–∫–µ
    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ —Å–µ—Ç–∏ –∏–ª–∏ API –≤–æ –≤—Ä–µ–º—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞: {e}")
        # –ü–æ–ø—ã—Ç–∫–∞ –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ –¥–ª—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏, –µ—Å–ª–∏ –≤–æ–∑–º–æ–∂–Ω–æ
        error_details = "–ù–µ—Ç –¥–µ—Ç–∞–ª–µ–π –æ—Ç–≤–µ—Ç–∞."
        if response is not None:
            try: error_details = response.text[:500] # –ß–∏—Ç–∞–µ–º –Ω–∞—á–∞–ª–æ –æ—Ç–≤–µ—Ç–∞
            except Exception: pass # –ï—Å–ª–∏ –ø—Ä–æ—á–∏—Ç–∞—Ç—å –Ω–µ —É–¥–∞–ª–æ—Å—å
        logger.error(f"  –î–µ—Ç–∞–ª–∏ –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å): {error_details}")
        yield None # –°–∏–≥–Ω–∞–ª –æ–± –æ—à–∏–±–∫–µ
    except Exception as e:
        logger.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è —Å—Ç—Ä–∏–º–∏–Ω–≥–∞: {e}", exc_info=True)
        yield None # –°–∏–≥–Ω–∞–ª –æ–± –æ—à–∏–±–∫–µ
    finally:
        # –£–±–µ–¥–∏–º—Å—è, —á—Ç–æ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ, –µ—Å–ª–∏ –æ–Ω–æ –±—ã–ª–æ –æ—Ç–∫—Ä—ã—Ç–æ
        if response is not None:
            try: response.close(); logger.debug("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –∑–∞–∫—Ä—ã—Ç–æ.")
            except Exception: pass


# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è Streamlit ---
if "all_chats" not in st.session_state or "active_chat" not in st.session_state:
    logger.info("–ü–µ—Ä–≤–∏—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏ (—á–∞—Ç—ã).")
    # –ó–∞–≥—Ä—É–∂–∞–µ–º —á–∞—Ç—ã –∏ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç
    st.session_state.all_chats, st.session_state.active_chat = load_all_chats()
else:
    logger.debug("–°–æ—Å—Ç–æ—è–Ω–∏–µ —Å–µ—Å—Å–∏–∏ (—á–∞—Ç—ã) —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–æ.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∂–∏–º–∞, –µ—Å–ª–∏ –æ–Ω –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
if "selected_mode" not in st.session_state:
    st.session_state.selected_mode = DEFAULT_MODE
    logger.info(f"–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä–µ–∂–∏–º–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é: {DEFAULT_MODE}")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è –≤–µ–±-–ø–æ–∏—Å–∫–∞ (–µ—Å–ª–∏ load_all_chats –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–∏–ª)
if "web_search_enabled" not in st.session_state:
     st.session_state.web_search_enabled = False # –ë–µ–∑–æ–ø–∞—Å–Ω–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
     logger.warning("web_search_enabled –Ω–µ –±—ã–ª —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ, —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤ False.")


# --- –ü—Ä–æ–≤–µ—Ä–∫–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–∏—Ä–æ–≤–∫–∞ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ ---
# –≠—Ç–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤–∞–∂–Ω–∞ –ø–æ—Å–ª–µ –ª—é–±—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å all_chats
if not isinstance(st.session_state.get("all_chats"), dict):
     logger.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: st.session_state.all_chats –Ω–µ —è–≤–ª—è–µ—Ç—Å—è —Å–ª–æ–≤–∞—Ä–µ–º. –°–±—Ä–æ—Å.")
     st.session_state.all_chats, st.session_state.active_chat = load_all_chats() # –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∏—Ç—å

active_chat_name = st.session_state.get("active_chat")
all_chats_keys = list(st.session_state.all_chats.keys())

if active_chat_name not in all_chats_keys:
    logger.warning(f"–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç '{active_chat_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Ç–µ–∫—É—â–µ–º —Å–ø–∏—Å–∫–µ —á–∞—Ç–æ–≤ {all_chats_keys}.")
    if all_chats_keys:
        st.session_state.active_chat = all_chats_keys[0]
        logger.info(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –Ω–æ–≤—ã–π –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç: '{st.session_state.active_chat}'")
    else:
        # –ï—Å–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ—Ç —á–∞—Ç–æ–≤, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
        new_name = generate_new_chat_name([])
        st.session_state.all_chats = {new_name: []}
        st.session_state.active_chat = new_name
        logger.info(f"–ß–∞—Ç–æ–≤ –Ω–µ –±—ã–ª–æ, —Å–æ–∑–¥–∞–Ω –∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω –Ω–æ–≤—ã–π —á–∞—Ç: '{new_name}'")
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ —Å–æ–∑–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ —á–∞—Ç–∞
        save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled)
    # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å–∫—Ä–∏–ø—Ç, —á—Ç–æ–±—ã –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã UI –æ–±–Ω–æ–≤–∏–ª–∏—Å—å —Å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–º –∞–∫—Ç–∏–≤–Ω—ã–º —á–∞—Ç–æ–º
    st.rerun()

# --- –°–∞–π–¥–±–∞—Ä ---
with st.sidebar:
    st.markdown("## üí¨ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —á–∞—Ç–∞–º–∏")
    chat_names = list(st.session_state.all_chats.keys())

    # –í—ã–±–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞
    try:
        # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ –¥–ª—è st.radio
        active_chat_index = chat_names.index(st.session_state.active_chat)
    except ValueError:
        # –ï—Å–ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç (–ø–æ –∫–∞–∫–æ–π-—Ç–æ –ø—Ä–∏—á–∏–Ω–µ) –Ω–µ –≤ —Å–ø–∏—Å–∫–µ, –≤—ã–±–∏—Ä–∞–µ–º –ø–µ—Ä–≤—ã–π
        logger.warning(f"–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç '{st.session_state.active_chat}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –∫–ª—é—á–µ–π –ø—Ä–∏ –æ—Ç—Ä–∏—Å–æ–≤–∫–µ —Å–∞–π–¥–±–∞—Ä–∞. –í—ã–±—Ä–∞–Ω –ø–µ—Ä–≤—ã–π.")
        active_chat_index = 0
        if chat_names: # –ï—Å–ª–∏ —Å–ø–∏—Å–æ–∫ –Ω–µ –ø—É—Å—Ç
            st.session_state.active_chat = chat_names[0]
        else:
            # –≠—Ç–∞ —Å–∏—Ç—É–∞—Ü–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–Ω–∏–∫–∞—Ç—å –∏–∑-–∑–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤—ã—à–µ, –Ω–æ –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
            logger.error("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: –ù–µ—Ç —á–∞—Ç–æ–≤ –¥–ª—è –≤—ã–±–æ—Ä–∞ –≤ —Å–∞–π–¥–±–∞—Ä–µ.")
            st.error("–û—à–∏–±–∫–∞: –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —á–∞—Ç–æ–≤.")
            st.stop() # –ù–µ –º–æ–∂–µ–º –ø—Ä–æ–¥–æ–ª–∂–∞—Ç—å –±–µ–∑ —á–∞—Ç–æ–≤

    # –ò—Å–ø–æ–ª—å–∑—É–µ–º st.radio –¥–ª—è –≤—ã–±–æ—Ä–∞ —á–∞—Ç–∞
    selected_chat = st.radio(
        "–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç:",
        options=chat_names,
        index=active_chat_index,
        key="chat_selector", # –ö–ª—é—á –¥–ª—è –≤–∏–¥–∂–µ—Ç–∞
        label_visibility="collapsed" # –°–∫—Ä—ã–≤–∞–µ–º —Å–∞–º –ª–µ–π–±–ª "–í—ã–±–µ—Ä–∏—Ç–µ —á–∞—Ç:"
    )

    # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –¥—Ä—É–≥–æ–π —á–∞—Ç
    if selected_chat is not None and selected_chat != st.session_state.active_chat:
        st.session_state.active_chat = selected_chat
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —á–∞—Ç: {selected_chat}")
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ —Å–º–µ–Ω–µ —á–∞—Ç–∞
        save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled)
        st.rerun() # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –æ–∫–Ω–∞ —á–∞—Ç–∞

    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —á–∞—Ç–∞–º–∏
    col1, col2 = st.columns(2)
    with col1:
        if st.button("‚ûï –ù–æ–≤—ã–π", key="new_chat_button", help="–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø—É—Å—Ç–æ–π —á–∞—Ç"):
            new_name = generate_new_chat_name(chat_names)
            st.session_state.all_chats[new_name] = []
            st.session_state.active_chat = new_name
            logger.info(f"–°–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π —á–∞—Ç: {new_name}")
            save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled)
            st.rerun()
    with col2:
        # –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∞–∫—Ç–∏–≤–Ω–∞ —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –µ—Å—Ç—å —á–∞—Ç—ã
        if chat_names and len(chat_names) > 0: # –î–æ–±–∞–≤–∏–ª –ø—Ä–æ–≤–µ—Ä–∫—É > 0 –¥–ª—è —è—Å–Ω–æ—Å—Ç–∏
             # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∫–∞—Å—Ç–æ–º–Ω—ã–π data-testid –¥–ª—è CSS
            if st.button("üóëÔ∏è –£–¥–∞–ª–∏—Ç—å", key="delete_chat_button", type="secondary", help="–£–¥–∞–ª–∏—Ç—å —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —á–∞—Ç", use_container_width=True):
                chat_to_delete = st.session_state.active_chat
                logger.info(f"–ó–∞–ø—Ä–æ—Å –Ω–∞ —É–¥–∞–ª–µ–Ω–∏–µ —á–∞—Ç–∞: {chat_to_delete}")

                if chat_to_delete in st.session_state.all_chats:
                    del st.session_state.all_chats[chat_to_delete]
                    logger.info(f"–ß–∞—Ç '{chat_to_delete}' —É–¥–∞–ª–µ–Ω.")
                    remaining_chats = list(st.session_state.all_chats.keys())

                    if remaining_chats:
                        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –ø–µ—Ä–≤—ã–π –æ—Å—Ç–∞–≤—à–∏–π—Å—è —á–∞—Ç
                        st.session_state.active_chat = remaining_chats[0]
                    else:
                        # –ï—Å–ª–∏ —É–¥–∞–ª–∏–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–∏–π, —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π
                        new_name = generate_new_chat_name([])
                        st.session_state.all_chats = {new_name: []}
                        st.session_state.active_chat = new_name
                        logger.info("–£–¥–∞–ª–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–∏–π —á–∞—Ç, —Å–æ–∑–¥–∞–Ω –Ω–æ–≤—ã–π.")

                    save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled)
                    st.toast(f"–ß–∞—Ç '{chat_to_delete}' —É–¥–∞–ª–µ–Ω.", icon="üóëÔ∏è")
                    st.rerun()
                else:
                    logger.warning(f"–ü–æ–ø—ã—Ç–∫–∞ —É–¥–∞–ª–∏—Ç—å –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —á–∞—Ç: {chat_to_delete}")
                    st.toast("–û—à–∏–±–∫–∞: –ß–∞—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω.", icon="‚ùì")

    st.divider()

    # –ü–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å –≤–µ–±-–ø–æ–∏—Å–∫–∞
    search_toggled = st.toggle(
        "üåê –í–µ–±-–ø–æ–∏—Å–∫",
        value=st.session_state.web_search_enabled,
        key="web_search_toggle",
        help="–ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ –¥–ª—è –±–æ–ª–µ–µ –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –æ—Ç–≤–µ—Ç–æ–≤"
    )
    # –ï—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
    if search_toggled != st.session_state.web_search_enabled:
        st.session_state.web_search_enabled = search_toggled
        logger.info(f"–°–æ—Å—Ç–æ—è–Ω–∏–µ –≤–µ–±-–ø–æ–∏—Å–∫–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: {search_toggled}")
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–∏—Å–∫–∞
        save_all_chats(st.session_state.all_chats, st.session_state.active_chat, st.session_state.web_search_enabled)
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–µ –Ω—É–∂–µ–Ω, –∏–∑–º–µ–Ω–µ–Ω–∏–µ –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—Ä–æ—Å–µ

    st.divider()

    # –í—ã–±–æ—Ä —Ä–µ–∂–∏–º–∞ (–º–æ–¥–µ–ª–∏)
    st.markdown("##### üß† –†–µ–∂–∏–º –ò–ò")
    mode_options = list(MODES.keys())
    try:
        # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å —Ç–µ–∫—É—â–µ–≥–æ —Ä–µ–∂–∏–º–∞
        current_mode_index = mode_options.index(st.session_state.selected_mode)
    except ValueError:
        logger.warning(f"–í—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º '{st.session_state.selected_mode}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –æ–ø—Ü–∏—è—Ö {mode_options}. –°–±—Ä–æ—Å –Ω–∞ {DEFAULT_MODE}.")
        st.session_state.selected_mode = DEFAULT_MODE
        current_mode_index = mode_options.index(DEFAULT_MODE) # –ù–∞—Ö–æ–¥–∏–º –∏–Ω–¥–µ–∫—Å –¥–µ—Ñ–æ–ª—Ç–Ω–æ–≥–æ

    selected_mode_radio = st.radio(
        "–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å:",
        options=mode_options,
        index=current_mode_index,
        key="mode_selector",
        label_visibility="collapsed" # –°–∫—Ä—ã–≤–∞–µ–º –ª–µ–π–±–ª
    )

    # –ï—Å–ª–∏ —Ä–µ–∂–∏–º –∏–∑–º–µ–Ω–∏–ª—Å—è
    if selected_mode_radio is not None and selected_mode_radio != st.session_state.selected_mode:
        st.session_state.selected_mode = selected_mode_radio
        logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª —Ä–µ–∂–∏–º: {selected_mode_radio}")
        # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è, —Ç.–∫. —Ä–µ–∂–∏–º –Ω–µ —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ local storage
        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –Ω–µ –Ω—É–∂–µ–Ω, —Ä–µ–∂–∏–º –ø—Ä–∏–º–µ–Ω–∏—Ç—Å—è –ø—Ä–∏ —Å–ª–µ–¥—É—é—â–µ–º –∑–∞–ø—Ä–æ—Å–µ

# --- –û—Å–Ω–æ–≤–Ω–∞—è –æ–±–ª–∞—Å—Ç—å: –ß–∞—Ç ---

# –ü–æ–ª—É—á–∞–µ–º –∞–∫—Ç—É–∞–ª—å–Ω–æ–µ –∏–º—è –∞–∫—Ç–∏–≤–Ω–æ–≥–æ —á–∞—Ç–∞ –∏ ID –º–æ–¥–µ–ª–∏
current_active_chat_name = st.session_state.active_chat
current_mode_name = st.session_state.selected_mode
current_model_id = MODES.get(current_mode_name, MODES[DEFAULT_MODE]) # –ë–µ—Ä–µ–º ID –∏–∑ —Å–ª–æ–≤–∞—Ä—è, —Å —Ñ–æ–ª–±—ç–∫–æ–º –Ω–∞ –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ —á–∞—Ç–∞ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç –∏–º—è —á–∞—Ç–∞ –∏ –∏—Å–ø–æ–ª—å–∑—É–µ–º—É—é –º–æ–¥–µ–ª—å
st.markdown(f"### –ß–∞—Ç: {current_active_chat_name} <span style='font-size: 0.7em; color: grey;'>({current_mode_name.strip()})</span>", unsafe_allow_html=True)

# –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π —á–∞—Ç–∞
chat_container = st.container()
with chat_container:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏
    if current_active_chat_name in st.session_state.all_chats:
        chat_history = st.session_state.all_chats[current_active_chat_name]
        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∫–∞–∂–¥–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
        for i, message in enumerate(chat_history):
            role = message.get("role")
            content = message.get("content")
            avatar = "üßë‚Äçüíª" if role == "user" else "‚ú®" # –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥—Ä—É–≥–æ–π —ç–º–æ–¥–∑–∏ –¥–ª—è –ò–ò
            if role and content: # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ç–æ–ª—å–∫–æ –≤–∞–ª–∏–¥–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
                # –ò—Å–ø–æ–ª—å–∑—É–µ–º —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–ª—é—á –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏–Ω–¥–µ–∫—Å–∞ –∏ —Ä–æ–ª–∏
                with st.chat_message(role, avatar=avatar):
                    st.markdown(content, unsafe_allow_html=True)
            else:
                logger.warning(f"–ü—Ä–æ–ø—É—â–µ–Ω–æ –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞ '{current_active_chat_name}': {message}")
    else:
        # –≠—Ç–∞ —Å–∏—Ç—É–∞—Ü–∏—è –º–∞–ª–æ–≤–µ—Ä–æ—è—Ç–Ω–∞ –∏–∑-–∑–∞ –ø—Ä–æ–≤–µ—Ä–æ–∫ –≤—ã—à–µ, –Ω–æ –¥–æ–±–∞–≤–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        st.warning(f"–ê–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç '{current_active_chat_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–π —á–∞—Ç –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π.")
        logger.error(f"–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é –Ω–µ—Å—É—â–µ—Å—Ç–≤—É—é—â–µ–≥–æ —á–∞—Ç–∞: {current_active_chat_name}")


# --- –ü–æ–ª–µ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ---
# –ò—Å–ø–æ–ª—å–∑—É–µ–º st.chat_input, –æ–Ω –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Ä–∞—Å–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è –≤–Ω–∏–∑—É
prompt = st.chat_input(f"–°–ø—Ä–æ—Å–∏—Ç–µ {current_mode_name.strip()}...")

if prompt:
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç –ü–ï–†–ï–î –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è
    if current_active_chat_name in st.session_state.all_chats:
        logger.info(f"–ü–æ–ª—É—á–µ–Ω –Ω–æ–≤—ã–π –ø—Ä–æ–º–ø—Ç –≤ —á–∞—Ç–µ '{current_active_chat_name}'.")
        # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é —Ç–µ–∫—É—â–µ–≥–æ —á–∞—Ç–∞
        user_message: Dict[str, str] = {"role": "user", "content": prompt}
        st.session_state.all_chats[current_active_chat_name].append(user_message)

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ
        save_all_chats(st.session_state.all_chats, current_active_chat_name, st.session_state.web_search_enabled)

        # –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É, —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∑–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏ –∑–∞–ø—É—Å—Ç–∏—Ç—å –≥–µ–Ω–µ—Ä–∞—Ü–∏—é –æ—Ç–≤–µ—Ç–∞ –ò–ò
        st.rerun()
    else:
        st.error("–û—à–∏–±–∫–∞: –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ, —Ç–∞–∫ –∫–∞–∫ —Ç–µ–∫—É—â–∏–π —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", icon="‚ùå")
        logger.error(f"–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è: —á–∞—Ç '{current_active_chat_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–æ–º–ø—Ç–∞.")


# --- –õ–æ–≥–∏–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –æ—Ç–≤–µ—Ç–∞ –ò–ò ---
# –≠—Ç–∞ —á–∞—Å—Ç—å –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –ü–û–°–õ–ï –ø–µ—Ä–µ–∑–∞–ø—É—Å–∫–∞ (st.rerun) –∏–∑-–∑–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç –∏ –µ—Å—Ç—å –ª–∏ –≤ –Ω–µ–º –∏—Å—Ç–æ—Ä–∏—è
if current_active_chat_name in st.session_state.all_chats:
    current_chat_history = st.session_state.all_chats[current_active_chat_name]

    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if current_chat_history and current_chat_history[-1]["role"] == "user":

        last_user_prompt = current_chat_history[-1]["content"]
        logger.info(f"\n--- –ù–∞—á–∞–ª–æ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –æ—Ç–≤–µ—Ç–∞ –ò–ò –¥–ª—è —á–∞—Ç–∞ '{current_active_chat_name}' ---")
        logger.info(f"–ü–æ—Å–ª–µ–¥–Ω–∏–π –ø—Ä–æ–º–ø—Ç: '{last_user_prompt[:100]}...'")
        logger.info(f"–†–µ–∂–∏–º –ò–ò: {current_mode_name} ({current_model_id})")
        logger.info(f"–í–µ–±-–ø–æ–∏—Å–∫: {'–í–ö–õ–Æ–ß–ï–ù' if st.session_state.web_search_enabled else '–í–´–ö–õ–Æ–ß–ï–ù'}")

        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞ –¥–ª—è –ò–ò
        context_for_ai: List[Dict[str, str]] = list(current_chat_history) # –ö–æ–ø–∏—Ä—É–µ–º –∏—Å—Ç–æ—Ä–∏—é
        system_prompt_content: Optional[str] = None
        current_date = datetime.datetime.now().strftime("%Y-%m-%d")

        # --- –≠—Ç–∞–ø 1: –í–µ–±-–ø–æ–∏—Å–∫ (–µ—Å–ª–∏ –≤–∫–ª—é—á–µ–Ω) ---
        if st.session_state.web_search_enabled:
            logger.info(">>> –≠—Ç–∞–ø 1: –í–µ–±-–ø–æ–∏—Å–∫ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω.")
            search_results_str: str = "–ü–æ–∏—Å–∫ –Ω–µ –≤—ã–ø–æ–ª–Ω—è–ª—Å—è."
            search_performed_successfully: bool = False
            generated_queries: List[str] = []

            # 1.1 –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –ø–æ–∏—Å–∫–æ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
            try:
                with st.spinner("–ü–æ–¥–±–∏—Ä–∞—é –ø–æ–∏—Å–∫–æ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã... ü§î"):
                    generated_queries = generate_search_queries(last_user_prompt)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –≤—ã–∑–æ–≤–µ generate_search_queries: {e}", exc_info=True)
                st.error("–û—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –ø–æ–¥–±–æ—Ä–∞ –ø–æ–∏—Å–∫–æ–≤—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤.", icon="‚ùì")
                # –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –±–µ–∑ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤, –±—É–¥–µ–º –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∏—Å—Ö–æ–¥–Ω—ã–π

            # –ï—Å–ª–∏ –∑–∞–ø—Ä–æ—Å—ã –Ω–µ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω—ã, –∏—Å–ø–æ–ª—å–∑—É–µ–º –∏—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            queries_to_search = generated_queries if generated_queries else [last_user_prompt]
            if not generated_queries:
                logger.warning("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–æ–∏—Å–∫–æ–≤—ã–µ –≤–æ–ø—Ä–æ—Å—ã, –±—É–¥–µ—Ç –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω –∏—Å—Ö–æ–¥–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –ø–æ–∏—Å–∫–∞.")

            # 1.2 –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–∏—Å–∫–∞
            search_spinner_text = f"–ò—â—É –≤ —Å–µ—Ç–∏ ({len(queries_to_search)} –∑–∞–ø—Ä–æ—Å(–∞))... üåê"
            try:
                with st.spinner(search_spinner_text):
                    search_results_str, search_performed_successfully = perform_web_search(queries_to_search)

                if search_performed_successfully:
                    logger.info("–í–µ–±-–ø–æ–∏—Å–∫ –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.")
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏ –ø–æ–∏—Å–∫–∞
                    system_prompt_content = f"""–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}.
–ë—ã–ª –≤—ã–ø–æ–ª–Ω–µ–Ω –≤–µ–±-–ø–æ–∏—Å–∫ –ø–æ –∑–∞–ø—Ä–æ—Å—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.
**–¢–≤–æ—è –∑–∞–¥–∞—á–∞:** –í–Ω–∏–º–∞—Ç–µ–ª—å–Ω–æ –∏–∑—É—á–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–µ –Ω–∏–∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤–µ–±-–ø–æ–∏—Å–∫–∞ –∏ **—Å–∏–Ω—Ç–µ–∑–∏—Ä—É–π –∏–∑ –Ω–∏—Ö –µ–¥–∏–Ω—ã–π, —Å–≤—è–∑–Ω—ã–π –∏ –∏—Å—á–µ—Ä–ø—ã–≤–∞—é—â–∏–π –æ—Ç–≤–µ—Ç** –Ω–∞ –∏—Å—Ö–æ–¥–Ω—ã–π –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –û—Ç–¥–∞–≤–∞–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ–∏—Å–∫–∞.
**–í–∞–∂–Ω–æ:** –ù–µ —Ü–∏—Ç–∏—Ä—É–π –∏—Å—Ç–æ—á–Ω–∏–∫–∏ –Ω–∞–ø—Ä—è–º—É—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ò—Å—Ç–æ—á–Ω–∏–∫ 1 —Å–∫–∞–∑–∞–ª..."). –ù–µ –≤–∫–ª—é—á–∞–π URL. –ü—Ä–æ—Å—Ç–æ –∏—Å–ø–æ–ª—å–∑—É–π –Ω–∞–π–¥–µ–Ω–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è —Å–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞. –ù–µ —É–ø–æ–º–∏–Ω–∞–π —Å–∞–º —Ñ–∞–∫—Ç –ø–æ–∏—Å–∫–∞, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è –¥–ª—è –æ—Ç–≤–µ—Ç–∞ –ø–æ —Å—É—â–µ—Å—Ç–≤—É.

--- –†–ï–ó–£–õ–¨–¢–ê–¢–´ –í–ï–ë-–ü–û–ò–°–ö–ê ---
{search_results_str}
--- –ö–û–ù–ï–¶ –†–ï–ó–£–õ–¨–¢–ê–¢–û–í ---

–¢–µ–ø–µ—Ä—å, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å **–ø—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–µ–Ω–Ω–æ –Ω–∞ —ç—Ç–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏**, –æ—Ç–≤–µ—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "{last_user_prompt}"
"""
                else:
                    logger.warning(f"–í–µ–±-–ø–æ–∏—Å–∫ –Ω–µ –¥–∞–ª —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤. –ü—Ä–∏—á–∏–Ω–∞: '{search_results_str}'")
                    # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ–º –æ –Ω–µ—É–¥–∞—á–µ
                    system_prompt_content = f"""–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}.
–í–µ–±-–ø–æ–∏—Å–∫ –±—ã–ª –≤–∫–ª—é—á–µ–Ω, –Ω–æ **–Ω–µ –¥–∞–ª –ø–æ–ª–µ–∑–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤** (–í–æ–∑–º–æ–∂–Ω–∞—è –ø—Ä–∏—á–∏–Ω–∞: {search_results_str}).
**–¢–≤–æ—è –∑–∞–¥–∞—á–∞:** –û—Ç–≤–µ—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, **–æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ —Å–≤–æ–∏—Ö –æ–±—â–∏—Ö –∑–Ω–∞–Ω–∏—è—Ö**.
**–í–∞–∂–Ω–æ:** –¢–∞–∫ –∫–∞–∫ –∞–∫—Ç—É–∞–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –∏–∑ —Å–µ—Ç–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∞, **–ø—Ä–µ–¥—É–ø—Ä–µ–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è**, —á—Ç–æ —Ç–≤–æ–π –æ—Ç–≤–µ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ —Å–∞–º—ã–º —Å–≤–µ–∂–∏–º –∏–ª–∏ –ø–æ–ª–Ω—ã–º, –æ—Å–æ–±–µ–Ω–Ω–æ –µ—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –∫–∞—Å–∞–µ—Ç—Å—è –Ω–µ–¥–∞–≤–Ω–∏—Ö —Å–æ–±—ã—Ç–∏–π –∏–ª–∏ –±—ã—Å—Ç—Ä–æ –º–µ–Ω—è—é—â–∏—Ö—Å—è —Ç–µ–º.

–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "{last_user_prompt}"
"""

            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –Ω–∞ —ç—Ç–∞–ø–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è perform_web_search: {e}", exc_info=True)
                st.error("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –≤–æ –≤—Ä–µ–º—è –≤–µ–±-–ø–æ–∏—Å–∫–∞.", icon="üï∏Ô∏è")
                # –°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –Ω–∞ —Å–ª—É—á–∞–π –ø–æ–ª–Ω–æ–π –æ—à–∏–±–∫–∏ –ø–æ–∏—Å–∫–∞
                system_prompt_content = f"""–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}.
–ü—Ä–æ–∏–∑–æ—à–ª–∞ **–æ—à–∏–±–∫–∞** –ø—Ä–∏ –ø–æ–ø—ã—Ç–∫–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—å –≤–µ–±-–ø–æ–∏—Å–∫.
**–¢–≤–æ—è –∑–∞–¥–∞—á–∞:** –û—Ç–≤–µ—Ç—å –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, **–æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å –∏—Å–∫–ª—é—á–∏—Ç–µ–ª—å–Ω–æ –Ω–∞ —Å–≤–æ–∏—Ö –æ–±—â–∏—Ö –∑–Ω–∞–Ω–∏—è—Ö**.
**–í–∞–∂–Ω–æ:** –ü—Ä–µ–¥—É–ø—Ä–µ–¥–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á—Ç–æ –∏–∑-–∑–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–∏ –≤–µ–±-–ø–æ–∏—Å–∫ –Ω–µ —É–¥–∞–ª—Å—è, –∏ —Ç–≤–æ–π –æ—Ç–≤–µ—Ç –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–∞–∫—Ç—É–∞–ª—å–Ω—ã–º.

–ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: "{last_user_prompt}"
"""
        else: # –í–µ–±-–ø–æ–∏—Å–∫ –≤—ã–∫–ª—é—á–µ–Ω
            logger.info(">>> –≠—Ç–∞–ø 1: –í–µ–±-–ø–æ–∏—Å–∫ –≤—ã–∫–ª—é—á–µ–Ω.")
            system_prompt_content = f"–¢–µ–∫—É—â–∞—è –¥–∞—Ç–∞: {current_date}. –í–µ–±-–ø–æ–∏—Å–∫ –í–´–ö–õ–Æ–ß–ï–ù. –û—Ç–≤–µ—á–∞–π –Ω–∞ –∑–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –æ—Å–Ω–æ–≤—ã–≤–∞—è—Å—å —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–≤–æ–∏—Ö –æ–±—â–∏—Ö –∑–Ω–∞–Ω–∏—è—Ö."

        # --- –≠—Ç–∞–ø 2: –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ –ø—Ä–æ–º–ø—Ç–∞ (–µ—Å–ª–∏ –æ–Ω –µ—Å—Ç—å) ---
        if system_prompt_content:
            # –í—Å—Ç–∞–≤–ª—è–µ–º —Å–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –ø–µ—Ä–µ–¥ –ø–æ—Å–ª–µ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            # –≠—Ç–æ —Ä–∞—Å–ø—Ä–æ—Å—Ç—Ä–∞–Ω–µ–Ω–Ω–∞—è –ø—Ä–∞–∫—Ç–∏–∫–∞ –¥–ª—è –Ω–µ–∫–æ—Ç–æ—Ä—ã—Ö –º–æ–¥–µ–ª–µ–π
            context_for_ai.insert(-1, {"role": "system", "content": system_prompt_content})
            logger.info("–°–∏—Å—Ç–µ–º–Ω—ã–π –ø—Ä–æ–º–ø—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ–Ω—Ç–µ–∫—Å—Ç.")
            # logger.debug(f"System prompt content: {system_prompt_content[:200]}...") # –õ–æ–≥–∏—Ä—É–µ–º –Ω–∞—á–∞–ª–æ –ø—Ä–æ–º–ø—Ç–∞ –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏

        # --- –≠—Ç–∞–ø 3: –°—Ç—Ä–∏–º–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞ –ò–ò ---
        logger.info(">>> –≠—Ç–∞–ø 2: –ó–∞–ø—Ä–æ—Å –∏ —Å—Ç—Ä–∏–º–∏–Ω–≥ –æ—Ç–≤–µ—Ç–∞ –ò–ò.")
        final_response_to_save: Optional[str] = None
        ai_response_error: bool = False
        full_response_chunks: List[str] = []

        try:
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º st.chat_message –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±–ª–æ–∫–∞ –æ—Ç–≤–µ—Ç–∞ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
            with st.chat_message("assistant", avatar="‚ú®"):
                # –°–æ–∑–¥–∞–µ–º placeholder —Å –ø–æ–º–æ—â—å—é st.empty() –≤–Ω—É—Ç—Ä–∏ –±–ª–æ–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
                message_placeholder = st.empty()
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –≤–Ω—É—Ç—Ä–∏ placeholder
                message_placeholder.markdown("–ì–µ–Ω–µ—Ä–∏—Ä—É—é –æ—Ç–≤–µ—Ç... ‚è≥")

                # –ü–æ–ª—É—á–∞–µ–º –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–∞ –æ—Ç API
                response_generator = stream_ai_response(current_model_id, context_for_ai)

                # –ò—Ç–µ—Ä–∏—Ä—É–µ–º –ø–æ —á–∞–Ω–∫–∞–º –æ—Ç–≤–µ—Ç–∞
                for chunk in response_generator:
                    if chunk is None:
                        # –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –≤–µ—Ä–Ω—É–ª None, —á—Ç–æ —Å–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –æ–± –æ—à–∏–±–∫–µ
                        logger.error("–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ –≤–µ—Ä–Ω—É–ª –æ—à–∏–±–∫—É (None).")
                        ai_response_error = True
                        message_placeholder.error("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –ò–ò!", icon="üî•")
                        # –ü—Ä–µ—Ä—ã–≤–∞–µ–º —Ü–∏–∫–ª, —Ç–∞–∫ –∫–∞–∫ —Å—Ç—Ä–∏–º–∏–Ω–≥ –Ω–µ —É–¥–∞–ª—Å—è
                        break
                    if chunk:
                        # –î–æ–±–∞–≤–ª—è–µ–º —á–∞–Ω–∫ –∫ —Å–ø–∏—Å–∫—É
                        full_response_chunks.append(chunk)
                        # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ placeholder'–∞ —Ç–µ–∫—É—â–∏–º –Ω–∞–∫–æ–ø–ª–µ–Ω–Ω—ã–º —Ç–µ–∫—Å—Ç–æ–º + –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä
                        # –ò—Å–ø–æ–ª—å–∑—É–µ–º unsafe_allow_html=True –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è markdown –≤–æ –≤—Ä–µ–º—è —Å—Ç—Ä–∏–º–∞
                        message_placeholder.markdown("".join(full_response_chunks) + " ‚ñå", unsafe_allow_html=True)

                # –ü–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Ü–∏–∫–ª–∞ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞ (–µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏)
                if not ai_response_error:
                    final_response_to_save = "".join(full_response_chunks).strip()
                    if final_response_to_save:
                        # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ñ–∏–Ω–∞–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –≤ placeholder'–µ –±–µ–∑ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞
                        message_placeholder.markdown(final_response_to_save, unsafe_allow_html=True)
                        logger.info("–û—Ç–≤–µ—Ç –ò–ò —É—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω.")
                    else:
                        # –°—Ç—Ä–∏–º –∑–∞–≤–µ—Ä—à–∏–ª—Å—è, –Ω–æ –æ—Ç–≤–µ—Ç –ø—É—Å—Ç–æ–π
                        logger.warning("–û—Ç–≤–µ—Ç –æ—Ç –ò–ò –ø—É—Å—Ç –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ —Å—Ç—Ä–∏–º–∏–Ω–≥–∞.")
                        message_placeholder.warning("–ò–ò –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç.", icon="ü§∑")
                        final_response_to_save = None # –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç
                # –ï—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞ (ai_response_error == True), —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ —É–∂–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–æ –≤ placeholder'–µ

        except Exception as e:
             # –õ–æ–≤–∏–º –æ—à–∏–±–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥—É—Ç –≤–æ–∑–Ω–∏–∫–Ω—É—Ç—å –≤–Ω–µ –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ st.chat_message)
             logger.error(f"–ù–µ–æ–∂–∏–¥–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –ò–ò: {e}", exc_info=True)
             # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –ø–æ—Ç–æ–∫–µ, —Ç–∞–∫ –∫–∞–∫ placeholder –º–æ–∂–µ—Ç –±—ã—Ç—å –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω
             st.error(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –ò–ò: {e}", icon="üí•")
             final_response_to_save = None # –ù–µ —Å–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç, –µ—Å–ª–∏ –±—ã–ª–∞ –æ—à–∏–±–∫–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
             ai_response_error = True

        # --- –≠—Ç–∞–ø 4: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ò–ò (–µ—Å–ª–∏ –æ–Ω —É—Å–ø–µ—à–µ–Ω –∏ –Ω–µ –ø—É—Å—Ç) ---
        if final_response_to_save and not ai_response_error:
            logger.info(">>> –≠—Ç–∞–ø 3: –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ò–ò –≤ –∏—Å—Ç–æ—Ä–∏—é.")
            try:
                # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∞–∫—Ç–∏–≤–Ω—ã–π —á–∞—Ç –≤—Å–µ –µ—â–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç (–Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π)
                if current_active_chat_name in st.session_state.all_chats:
                     # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
                     assistant_message: Dict[str, str] = {"role": "assistant", "content": final_response_to_save}
                     # –î–æ–±–∞–≤–ª—è–µ–º –µ–≥–æ –≤ –∏—Å—Ç–æ—Ä–∏—é
                     st.session_state.all_chats[current_active_chat_name].append(assistant_message)
                     # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—Å–µ —á–∞—Ç—ã –≤ LocalStorage
                     save_all_chats(st.session_state.all_chats, current_active_chat_name, st.session_state.web_search_enabled)
                     logger.info("–û—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∏—Å—Ç–æ—Ä–∏—é –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")
                     # --- RERUN –ù–ï –ù–£–ñ–ï–ù ---
                     # –û—Ç–≤–µ—Ç —É–∂–µ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω –Ω–∞ —ç–∫—Ä–∞–Ω–µ —Å –ø–æ–º–æ—â—å—é st.empty()
                else:
                     logger.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞: —á–∞—Ç '{current_active_chat_name}' –Ω–µ –Ω–∞–π–¥–µ–Ω –≤–æ –≤—Ä–µ–º—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è.")
                     st.error("–û—à–∏–±–∫–∞: –Ω–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –æ—Ç–≤–µ—Ç –ò–ò, —á–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω.", icon="‚ùå")
            except Exception as e:
                 logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–∏ –æ—Ç–≤–µ—Ç–∞ –ò–ò –≤ session_state –∏–ª–∏ LocalStorage: {e}", exc_info=True)
                 st.error(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞ –ò–ò: {e}", icon="üíæ")
        elif ai_response_error:
            logger.warning("–û—Ç–≤–µ—Ç –ò–ò –Ω–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –∏–∑-–∑–∞ –æ—à–∏–±–∫–∏ –≤–æ –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏/—Å—Ç—Ä–∏–º–∏–Ω–≥–∞.")
        elif not final_response_to_save:
             logger.warning("–ü—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç –ò–ò –Ω–µ –±—É–¥–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω.")


        # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
        logger.info(f"--- –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ò–ò –¥–ª—è —á–∞—Ç–∞ '{current_active_chat_name}' –∑–∞–≤–µ—Ä—à–µ–Ω–∞ ---")

# –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–±–æ–ª—å—à–æ–π –æ—Ç—Å—Ç—É–ø —Å–Ω–∏–∑—É, —á—Ç–æ–±—ã –ø–æ–ª–µ –≤–≤–æ–¥–∞ –Ω–µ –ø–µ—Ä–µ–∫—Ä—ã–≤–∞–ª–æ –ø–æ—Å–ª–µ–¥–Ω–∏–π –æ—Ç–≤–µ—Ç
st.markdown("<div style='height: 5rem;'></div>", unsafe_allow_html=True)
